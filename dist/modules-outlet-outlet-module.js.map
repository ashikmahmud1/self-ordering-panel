{"version":3,"sources":["webpack:///./src/app/modules/outlet/builder/builder.routing.ts","webpack:///./src/app/modules/outlet/builder/category/category-form/category-form.component.css","webpack:///./src/app/modules/outlet/builder/category/category-form/category-form.component.html","webpack:///./src/app/modules/outlet/builder/category/category-form/category-form.component.ts","webpack:///./src/app/modules/outlet/builder/category/category-list/category-list.component.css","webpack:///./src/app/modules/outlet/builder/category/category-list/category-list.component.html","webpack:///./src/app/modules/outlet/builder/category/category-list/category-list.component.ts","webpack:///./src/app/modules/outlet/builder/menu-builder/menu-builder.component.css","webpack:///./src/app/modules/outlet/builder/menu-builder/menu-builder.component.html","webpack:///./src/app/modules/outlet/builder/menu-builder/menu-builder.component.ts","webpack:///./src/app/modules/outlet/builder/menu-item/menu-item-form/menu-item-form.component.css","webpack:///./src/app/modules/outlet/builder/menu-item/menu-item-form/menu-item-form.component.html","webpack:///./src/app/modules/outlet/builder/menu-item/menu-item-form/menu-item-form.component.ts","webpack:///./src/app/modules/outlet/builder/menu-item/menu-item-list/menu-item-list.component.css","webpack:///./src/app/modules/outlet/builder/menu-item/menu-item-list/menu-item-list.component.html","webpack:///./src/app/modules/outlet/builder/menu-item/menu-item-list/menu-item-list.component.ts","webpack:///./src/app/modules/outlet/builder/menu-item/menu-item.model.ts","webpack:///./src/app/modules/outlet/builder/modifier/modifier-form/modifier-form.component.css","webpack:///./src/app/modules/outlet/builder/modifier/modifier-form/modifier-form.component.html","webpack:///./src/app/modules/outlet/builder/modifier/modifier-form/modifier-form.component.ts","webpack:///./src/app/modules/outlet/builder/modifier/modifier-list/modifier-list.component.css","webpack:///./src/app/modules/outlet/builder/modifier/modifier-list/modifier-list.component.html","webpack:///./src/app/modules/outlet/builder/modifier/modifier-list/modifier-list.component.ts","webpack:///./src/app/modules/outlet/menu/menu-form/menu-form.component.css","webpack:///./src/app/modules/outlet/menu/menu-form/menu-form.component.html","webpack:///./src/app/modules/outlet/menu/menu-form/menu-form.component.ts","webpack:///./src/app/modules/outlet/menu/menu-list/menu-list.component.css","webpack:///./src/app/modules/outlet/menu/menu-list/menu-list.component.html","webpack:///./src/app/modules/outlet/menu/menu-list/menu-list.component.ts","webpack:///./src/app/modules/outlet/menu/menu.model.ts","webpack:///./src/app/modules/outlet/outlet-route/outlet-route.component.css","webpack:///./src/app/modules/outlet/outlet-route/outlet-route.component.html","webpack:///./src/app/modules/outlet/outlet-route/outlet-route.component.ts","webpack:///./src/app/modules/outlet/outlet.module.ts","webpack:///./src/app/modules/outlet/outlet.routing.ts","webpack:///./src/app/modules/outlet/outlets/outlet-form/outlet-form.component.css","webpack:///./src/app/modules/outlet/outlets/outlet-form/outlet-form.component.html","webpack:///./src/app/modules/outlet/outlets/outlet-form/outlet-form.component.ts","webpack:///./src/app/modules/outlet/outlets/outlet-list/outlet-list.component.css","webpack:///./src/app/modules/outlet/outlets/outlet-list/outlet-list.component.html","webpack:///./src/app/modules/outlet/outlets/outlet-list/outlet-list.component.ts","webpack:///./src/app/modules/outlet/outlets/outlet.model.ts","webpack:///./src/app/modules/outlet/pos/pos-item/pos-item.component.css","webpack:///./src/app/modules/outlet/pos/pos-item/pos-item.component.html","webpack:///./src/app/modules/outlet/pos/pos-item/pos-item.component.ts","webpack:///./src/app/modules/outlet/pos/pos-modifier/pos-modifier.component.css","webpack:///./src/app/modules/outlet/pos/pos-modifier/pos-modifier.component.html","webpack:///./src/app/modules/outlet/pos/pos-modifier/pos-modifier.component.ts","webpack:///./src/app/modules/outlet/user/user-form/user-form.component.css","webpack:///./src/app/modules/outlet/user/user-form/user-form.component.html","webpack:///./src/app/modules/outlet/user/user-form/user-form.component.ts","webpack:///./src/app/modules/outlet/user/user-list/user-list.component.css","webpack:///./src/app/modules/outlet/user/user-list/user-list.component.html","webpack:///./src/app/modules/outlet/user/user-list/user-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACyF;AACA;AACA;AACA;AACZ;AACe;AACA;AAErF,IAAM,iBAAiB,GAAW,CAAC;QACxC,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,yFAAoB;KAChC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,qGAAqB;aACjC;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,qGAAqB;aACjC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,qGAAqB;aACjC;SACF;KACF;IACD;QACE,IAAI,EAAE,UAAU;QAChB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,qGAAqB;aACjC;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,qGAAqB;aACjC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,qGAAqB;aACjC;SACF;KACF;IACD;QACE,IAAI,EAAE,WAAW;QACjB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,wGAAqB;aACjC;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,wGAAqB;aACjC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,wGAAqB;aACjC;SACF;KACF,CAAC,CAAC;;;;;;;;;;;;AClEH,0CAA0C,uBAAuB,wBAAwB,KAAK,K;;;;;;;;;;;ACA9F,u6G;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEO;AACd;AAC8B;AACX;AAQ9D;IAME,+BAAoB,MAAc,EACxB,KAAqB,EACtB,MAAqB,EACrB,MAAwB;QAHb,WAAM,GAAN,MAAM,CAAQ;QACxB,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAkB;IAAI,CAAC;IAEtC,wCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,IAAI,CAAC,UAAY,CAAC,CAAC,SAAS,CAAC,UAAC,YAAsB;gBACnH,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED,0CAAU,GAAV,UAAW,KAAU,EAAE,IAAY;QAAnC,iBAmBC;QAlBC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;oBAC9C,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,YAAU,IAAI,CAAC,QAAQ,kBAAa,IAAI,CAAC,UAAU,kBAAe,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9I,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;wBAC9B,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;4BAClD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAClB,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;4BACjC,CAAC;4BACD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;wBACnD,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3C,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAU,GAAV,UAAW,IAAY;QACrB,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,YAAU,IAAI,CAAC,QAAQ,kBAAa,IAAI,CAAC,UAAU,kBAAe,CAAC,CAAC;gBAClG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC3B,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAED,2CAAW,GAAX,UAAY,YAAoB;QAAhC,iBAgCC;QA/BC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,IAAI,CAAC,UAAY,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5G,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;qBACrF,IAAI,CAAC,UAAC,WAAW;oBAChB,IAAM,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC;oBAClC,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACrB,IAAM,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,YAAU,KAAI,CAAC,QAAQ,kBAAa,UAAU,kBAAe,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;wBACpI,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;wBAC9C,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;4BAC9B,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;gCAClD,WAAW,CAAC,MAAM,CAAC;oCACjB,KAAK,EAAE,QAAQ;iCAChB,CAAC,CAAC;gCACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,UAAU,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gCAC5E,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;4BACtD,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,UAAU,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;wBAC5E,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;oBACtD,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAzFU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAO4B,sDAAM;YACjB,8DAAc;YACd,wDAAa;YACb,wEAAgB;OATtB,qBAAqB,CA2FjC;IAAD,4BAAC;CAAA;AA3FiC;;;;;;;;;;;;ACblC,mB;;;;;;;;;;;ACAA,oPAAoP,4VAA4V,iBAAiB,qhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/iB;AACD;AACN;AAE8B;AACX;AAQ9D;IAIE,+BAAmB,MAAqB,EAAU,KAAqB,EAAS,MAAwB;QAArF,WAAM,GAAN,MAAM,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAkB;IAAI,CAAC;IAE7G,wCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC;IAC9F,CAAC;IAED,8CAAc,GAAd,UAAe,KAAY,EAAE,UAAkB;QAC7C,IAAM,QAAQ,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,UAAY,CAAC,CAAC;YACjF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IAlBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAK2B,wDAAa,EAAiB,8DAAc,EAAiB,wEAAgB;OAJ7F,qBAAqB,CAoBjC;IAAD,4BAAC;CAAA;AApBiC;;;;;;;;;;;;ACblC,mB;;;;;;;;;;;ACAA,4uB;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACe;AAOzD;IACE,8BAAoB,MAAc,EACxB,KAAqB;QADX,WAAM,GAAN,MAAM,CAAQ;QACxB,UAAK,GAAL,KAAK,CAAgB;IAC/B,CAAC;IAHU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAE4B,sDAAM;YACjB,8DAAc;OAFpB,oBAAoB,CAIhC;IAAD,2BAAC;CAAA;AAJgC;;;;;;;;;;;;ACRjC,0CAA0C,qBAAqB,sBAAsB,GAAG,G;;;;;;;;;;;ACAxF,wwDAAwwD,aAAa,s4HAAs4H,cAAc,i6BAAi6B,8pE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxhN;AACO;AACxB;AACU;AAC8B;AACyB;AAClB;AAOhF;IAUE,+BAAmB,MAAwB,EACjC,MAAc,EACd,KAAqB,EACtB,MAAqB;QAHX,WAAM,GAAN,MAAM,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEnC,wCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,iBAAiB,GAAG,kEAAiB,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,UAAC,OAAY;YACxD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,YAAY;YAC7F,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,YAAY;YAC7F,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,IAAI,CAAC,UAAY,CAAC,CAAC,SAAS,CAAC,UAAC,YAAsB;gBACnH,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IACD,0CAAU,GAAV,UAAW,KAAU,EAAE,IAAY;QAAnC,iBAoBC;QAnBC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;oBAC9C,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,YAAU,IAAI,CAAC,QAAQ,cAAS,IAAI,CAAC,UAAU,kBAAe,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1I,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;wBAC9B,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;4BAClD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAClB,KAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC;gCACpD,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC;4BACzC,CAAC;4BACD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;wBACnD,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAU,GAAV,UAAW,IAAY;QACrB,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,YAAU,IAAI,CAAC,QAAQ,cAAS,IAAI,CAAC,UAAU,kBAAe,CAAC,CAAC;gBAC9F,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;gBACnC,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC;QACH,CAAC;IACH,CAAC;IAED,oDAAoB,GAApB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;YAChE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC/B,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,EAAE;aACX,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,kDAAkB,GAAlB,UAAmB,CAAS;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,2CAAW,GAAX,UAAY,YAAiB;QAA7B,iBAqCC;QApCC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,sDAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACnF,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,IAAI,CAAC,UAAY,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5G,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;YACvD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;qBACrF,IAAI,CAAC,UAAC,WAAW;oBAChB,IAAM,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC;oBAClC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;wBACnB,IAAM,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,YAAU,KAAI,CAAC,QAAQ,cAAS,UAAU,kBAAe,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;wBAC9H,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;wBAC9C,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;4BAC9B,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;gCAClD,WAAW,CAAC,MAAM,CAAC;oCACjB,OAAO,EAAE;wCACP,KAAK,EAAE,QAAQ;qCAChB;iCACF,CAAC,CAAC;gCACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,UAAU,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gCAC5E,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;4BACvD,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,UAAU,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;wBAC5E,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;oBACvD,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IA9HU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAW2B,wEAAgB;YACzB,sDAAM;YACP,8DAAc;YACd,wDAAa;OAbnB,qBAAqB,CAgIjC;IAAD,4BAAC;CAAA;AAhIiC;;;;;;;;;;;;ACblC,mB;;;;;;;;;;;ACAA,sLAAsL,2OAA2O,iBAAiB,6eAA6e,iBAAiB,0jB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA93B;AACD;AACN;AAEwB;AACM;AACO;AAShF;IAOE,+BAAmB,MAAwB,EAAU,KAAqB,EAAS,MAAqB;QAArF,WAAM,GAAN,MAAM,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEvG,wCAAQ,GAAd;;;;;;wBACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;wBAC9G,qBAAM,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,YAAwB;gCAC/G,KAAI,CAAC,gBAAgB,GAAG,oDAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;4BACpD,CAAC,CAAC;;wBAFF,SAEE,CAAC;wBACH,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,aAAyB;4BAC1G,KAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;4BACtC,IAAM,YAAY,GAAG,sDAAO,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;4BACxD,KAAI,CAAC,aAAa,GAAG,sDAAO,CAAC,oDAAK,CAAC,EAAE,EAAE,KAAI,CAAC,gBAAgB,EAAE,wDAAS,CAAC,YAAY,EAAE,UAAC,KAAK,IAAK,QAAC,EAAE,KAAK,SAAE,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC;wBAClH,CAAC,CAAC,CAAC;;;;;KACJ;IAED,8CAAc,GAAd,UAAe,KAAY,EAAE,UAAkB;QAC7C,IAAM,QAAQ,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,UAAY,CAAC,CAAC;YACjF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC;QACvD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IA5BU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAQ2B,wEAAgB,EAAiB,8DAAc,EAAiB,wDAAa;OAP7F,qBAAqB,CA8BjC;IAAD,4BAAC;CAAA;AA9BiC;;;;;;;;;;;;;;;ACe3B,IAAM,iBAAiB,GAAkB;IAC9C,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IAChC,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;IAC9C,EAAE,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,EAAE;IACpD,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;IAC9C,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;IAC9C,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;IAClC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;IACtC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,aAAa,EAAE;CAC5C,CAAC;;;;;;;;;;;;ACvCF,mB;;;;;;;;;;;ACAA,k6GAAk6G,ssE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh3G;AACO;AACxB;AACU;AAC8B;AACX;AAQ9D;IAIE,+BAAmB,MAAwB,EACjC,MAAc,EACd,KAAqB,EACtB,MAAqB;QAHX,WAAM,GAAN,MAAM,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEnC,wCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,IAAI,CAAC,UAAY,CAAC,CAAC,SAAS,CAAC,UAAC,YAAsB;gBACnH,KAAI,CAAC,QAAQ,GAAG,YAAY,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED,2CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;YAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;gBACtB,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,CAAC;gBACR,UAAU,EAAE,EAAE;aACf,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,yCAAS,GAAT,UAAU,CAAS;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IAED,2CAAW,GAAX,UAAY,YAAiB;QAC3B,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBACjC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,sDAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACvE,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,IAAI,CAAC,UAAY,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5G,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;YACtD,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAvDU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAK2B,wEAAgB;YACzB,sDAAM;YACP,8DAAc;YACd,wDAAa;OAPnB,qBAAqB,CAyDjC;IAAD,4BAAC;CAAA;AAzDiC;;;;;;;;;;;;ACblC,mB;;;;;;;;;;;ACAA,oPAAoP,4VAA4V,iBAAiB,qhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/iB;AACD;AACN;AAE8B;AACX;AAQ9D;IAIE,+BAAmB,MAAwB,EAAU,KAAqB,EAAS,MAAqB;QAArF,WAAM,GAAN,MAAM,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE7G,wCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC;IAC9F,CAAC;IAED,8CAAc,GAAd,UAAe,KAAY,EAAE,UAAkB;QAC7C,IAAM,QAAQ,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAgB,SAAI,UAAY,CAAC,CAAC;YACjF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QACtD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IAlBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAK2B,wEAAgB,EAAiB,8DAAc,EAAiB,wDAAa;OAJ7F,qBAAqB,CAoBjC;IAAD,4BAAC;CAAA;AApBiC;;;;;;;;;;;;ACblC,mB;;;;;;;;;;;ACAA,6uEAA6uE,wbAAwb,cAAc,6uBAA6uB,cAAc,yvBAAyvB,cAAc,o6BAAo6B,+rB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAviK;AACO;AACxB;AACU;AAC2B;AACG;AACZ;AAO7D;IAME,2BAAmB,MAAwB,EACjC,MAAc,EACd,KAAqB,EACtB,MAAqB;QAHX,WAAM,GAAN,MAAM,CAAkB;QACjC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEnC,oCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,GAAG,mDAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,aAAa;YAC9F,KAAI,CAAC,SAAS,GAAG,aAAa,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAY,SAAI,IAAI,CAAC,MAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,QAAc;gBACnG,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED,iDAAqB,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACnB,QAAQ,EAAE,EAAE;gBACZ,MAAM,EAAE,EAAE;gBACV,GAAG,EAAE,EAAE;aACR,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,+CAAmB,GAAnB,UAAoB,CAAS;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IACD,mCAAO,GAAP,UAAQ,QAAa;QACnB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,sDAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjE,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAY,SAAI,IAAI,CAAC,MAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACjF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAClD,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IA5DU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAO2B,wEAAgB;YACzB,sDAAM;YACP,8DAAc;YACd,wDAAa;OATnB,iBAAiB,CA8D7B;IAAD,wBAAC;CAAA;AA9D6B;;;;;;;;;;;;ACb9B,mB;;;;;;;;;;;ACAA,+UAA+U,oXAAoX,aAAa,ymB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9pB;AACD;AACN;AAE2B;AACf;AAQvD;IAIE,2BAAmB,MAAwB,EAAU,KAAqB,EAAS,MAAqB;QAArF,WAAM,GAAN,MAAM,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE7G,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAc,CAAC,CAAC;IACtF,CAAC;IAED,sCAAU,GAAV,UAAW,KAAY,EAAE,MAAc;QACrC,IAAM,QAAQ,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAY,SAAI,MAAQ,CAAC,CAAC;YACzE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IAlBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAK2B,wEAAgB,EAAiB,8DAAc,EAAiB,wDAAa;OAJ7F,iBAAiB,CAoB7B;IAAD,wBAAC;CAAA;AApB6B;;;;;;;;;;;;;;;ACMvB,IAAM,OAAO,GAAkB;IACpC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;IACxC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;IACtC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;IACpC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;IACpC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;IACtC,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE;IAC1C,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;IACxC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;IACpC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;CACzC,CAAC;;;;;;;;;;;;AC7BF,6CAA6C,oBAAoB,GAAG,kCAAkC,uBAAuB,mBAAmB,8BAA8B,GAAG,G;;;;;;;;;;;ACAjL,gVAAgV,4BAA4B,qqCAAqqC,aAAa,mG;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA79C;AACR;AAC7B;AACuC;AAOnE;IAKE,8BAAoB,MAAc,EACzB,MAAwB,EACvB,KAAqB;QAFX,WAAM,GAAN,MAAM,CAAQ;QACzB,WAAM,GAAN,MAAM,CAAkB;QACvB,UAAK,GAAL,KAAK,CAAgB;QAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,UAAC,UAAe;YAC3D,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAgB,IAAI,CAAC,cAAc,UAAO,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,8CAAe,GAAf;QACE,mCAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK;YACtC,mCAAC,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACxC,mCAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QACH,mCAAC,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK;YACpC,mCAAC,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QACH,mCAAC,CAAC,0BAA0B,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAK;YAC9C,mCAAC,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAlCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAM4B,sDAAM;YACjB,wEAAgB;YAChB,8DAAc;OAPpB,oBAAoB,CAmChC;IAAD,2BAAC;CAAA;AAnCgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AACN;AACI;AACE;AACQ;AACD;AACd;AACgB;AACyC;AACA;AACA;AACA;AACZ;AACe;AACA;AAC3B;AACA;AACI;AAC7B;AACkC;AACA;AACT;AACA;AACJ;AACY;AA8BjF;IAAA;IAA4B,CAAC;IAAhB,YAAY;QA7BxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,gEAAY;gBACZ,mEAAc;gBACd,qDAAW;gBACX,oEAAS;gBACT,4DAAY,CAAC,QAAQ,CAAC,6DAAY,CAAC;aACpC;YACD,YAAY,EAAE;gBACZ,+FAAmB;gBACnB,+FAAmB;gBACnB,0FAAoB;gBACpB,kGAAoB;gBACpB,8GAAqB;gBACrB,8GAAqB;gBACrB,iHAAqB;gBACrB,iHAAqB;gBACrB,6GAAqB;gBACrB,6GAAqB;gBACrB,sFAAiB;gBACjB,sFAAiB;gBACjB,sFAAiB;gBACjB,sFAAiB;gBACjB,kFAAgB;gBAChB,8FAAoB;aACrB;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACrDqC;AACW;AACA;AACI;AACK;AACA;AACT;AACA;AACJ;AACY;AAG1E,IAAM,YAAY,GAAW;IAClC;QACE,IAAI,EAAE,SAAS;QACf,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,8FAAmB;aAC/B;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,8FAAmB;aAC/B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,8FAAmB;aAC/B;SACF;KACF;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,yFAAoB;QAC/B,QAAQ,EACH,0EAAiB;YACpB;gBACE,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,MAAM;wBACjB,SAAS,EAAE,qFAAiB;qBAC7B;oBACD;wBACE,IAAI,EAAE,SAAS;wBACf,SAAS,EAAE,qFAAiB;qBAC7B;oBACD;wBACE,IAAI,EAAE,UAAU;wBAChB,SAAS,EAAE,qFAAiB;qBAC7B;iBACF;aACF;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,MAAM;wBACjB,SAAS,EAAE,qFAAiB;qBAC7B;oBACD;wBACE,IAAI,EAAE,SAAS;wBACf,SAAS,EAAE,qFAAiB;qBAC7B;iBACF;aACF;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,MAAM;wBACjB,SAAS,EAAE,iFAAgB;qBAC5B;iBAEF;aACF;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,MAAM;wBACjB,SAAS,EAAE,6FAAoB;qBAChC;iBAEF;aACF;UACF;KACF;CACF,CAAC;;;;;;;;;;;;AC7FF,wCAAwC,qBAAqB,sBAAsB,GAAG,G;;;;;;;;;;;ACAtF,itEAAitE,EAAE,oBAAoB,IAAI,QAAQ,IAAI,q4EAAq4E,gBAAgB,+mBAA+mB,cAAc,6iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvtK;AAEO;AACnB;AACK;AAC2B;AACb;AAC4B;AAOrF;IAQE,6BAAoB,MAAc,EACxB,KAAqB,EACtB,MAAqB,EACrB,MAAwB;QAHb,WAAM,GAAN,MAAM,CAAQ;QACxB,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAkB;IAAI,CAAC;IAEtC,sCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,aAAa,GAAG,2DAAa,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,0DAAY,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAI,8DAAc,SAAI,IAAI,CAAC,QAAU,CAAC,CAAC,SAAS,CAAC,UAAC,UAAkB;gBAClF,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAED,wCAAU,GAAV,UAAW,KAAU,EAAE,IAAY;QAAnC,iBAmBC;QAlBC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;oBAC9C,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,YAAU,IAAI,CAAC,QAAQ,uBAAoB,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvH,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;wBAC9B,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;4BAClD,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gCAChB,KAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;4BAC/B,CAAC;4BACD,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;wBACnD,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3C,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,wCAAU,GAAV,UAAW,IAAY;QACrB,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,YAAU,IAAI,CAAC,QAAQ,uBAAoB,CAAC,CAAC;gBAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;gBACzB,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;QACH,CAAC;IACH,CAAC;IAED,uCAAS,GAAT,UAAU,UAAkB;QAA5B,iBAqCC;QApCC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,sDAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrE,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAI,8DAAc,SAAI,IAAI,CAAC,QAAU,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC7E,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;gBACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAC9D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,8DAAc,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;qBACnD,IAAI,CAAC,UAAC,WAAW;oBAChB,IAAM,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC;oBAChC,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBACrB,IAAM,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,YAAU,QAAQ,uBAAoB,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC;wBAC7G,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;wBAC9C,UAAU,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ;4BAC9B,QAAQ,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,QAAgB;gCAClD,WAAW,CAAC,MAAM,CAAC;oCACjB,IAAI,EAAE;wCACJ,KAAK,EAAE,QAAQ;qCAChB;iCACF,CAAC,CAAC;gCACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gCAC5D,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;4BACxD,CAAC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;wBAC5D,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;oBACxD,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAjGU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAS4B,sDAAM;YACjB,8DAAc;YACd,wDAAa;YACb,wEAAgB;OAXtB,mBAAmB,CAmG/B;IAAD,0BAAC;CAAA;AAnG+B;;;;;;;;;;;;ACdhC,mB;;;;;;;;;;;ACAA,kVAAkV,oaAAoa,eAAe,q1B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAntB;AACP;AAE2B;AACb;AAQzD;IAGE,6BAAmB,MAAqB,EAAS,MAAwB;QAAtD,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAkB;IAAI,CAAC;IAE9E,sCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,8DAAc,CAAC,CAAC;IAC5D,CAAC;IAED,0CAAY,GAAZ,UAAa,KAAY,EAAE,QAAgB;QACzC,IAAM,QAAQ,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAI,8DAAc,SAAI,QAAU,CAAC,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;QACxD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IAhBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAI2B,wDAAa,EAAiB,wEAAgB;OAH9D,mBAAmB,CAkB/B;IAAD,0BAAC;CAAA;AAlB+B;;;;;;;;;;;;;;;;ACYzB,IAAM,aAAa,GAAkB;IAC1C,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE;IACxC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;CACnC,CAAC;AACK,IAAM,YAAY,GAAkB;IACzC,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,EAAE;CACzC,CAAC;;;;;;;;;;;;AC9BF,6BAA6B,iBAAiB,uBAAuB,GAAG,kBAAkB,sBAAsB,GAAG,G;;;;;;;;;;;ACAnH,y5BAAy5B,+DAA+D,aAAa,ktB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCn7B;AACD;AACN;AAE2B;AACM;AAO5E;IAME,0BAAmB,MAAwB,EAAU,KAAqB,EAAS,MAAqB;QAArF,WAAM,GAAN,MAAM,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE7G,mCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,aAAyB;YAC1G,KAAI,CAAC,gBAAgB,GAAG,aAAa,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,+DAAe,CAAC,CAAC;IAC9D,CAAC;IACD,qCAAU,GAAV,UAAW,WAAgB;QAA3B,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,+DAAe,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;iBACrD,IAAI,CAAC,UAAC,WAAW;gBAChB,IAAM,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC;gBAClC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAxBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAO2B,wEAAgB,EAAiB,8DAAc,EAAiB,wDAAa;OAN7F,gBAAgB,CAyB5B;IAAD,uBAAC;CAAA;AAzB4B;;;;;;;;;;;;ACb7B,mB;;;;;;;;;;;ACAA,2pBAA2pB,+DAA+D,iBAAiB,4sB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCzrB;AACD;AACN;AAE2B;AACwB;AAEjC;AAQ7D;IAKE,8BAAmB,MAAwB,EAAU,KAAqB,EAAS,MAAqB;QAArF,WAAM,GAAN,MAAM,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE7G,uCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,gEAAkB,CAAC,CAAC,SAAS,CAAC,UAAC,YAAwB;YACzG,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEnC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,mEAAmB,CAAC,CAAC;IAClE,CAAC;IACD,6CAAc,GAAd,UAAe,eAAoB;QAAnC,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,mEAAmB,EAAE,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;iBAC7D,IAAI,CAAC,UAAC,WAAW;gBAChB,IAAM,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC;gBAClC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAxBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAM2B,wEAAgB,EAAiB,8DAAc,EAAiB,wDAAa;OAL7F,oBAAoB,CAyBhC;IAAD,2BAAC;CAAA;AAzBgC;;;;;;;;;;;;AChBjC,0CAA0C,uBAAuB,wBAAwB,KAAK,K;;;;;;;;;;;ACA9F,2uCAA2uC,IAAI,wwG;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7rC;AAEO;AACd;AAC2B;AACf;AAQvD;IAKE,2BAAoB,MAAc,EACxB,KAAqB,EACtB,MAAqB,EACrB,MAAwB;QAHb,WAAM,GAAN,MAAM,CAAQ;QACxB,UAAK,GAAL,KAAK,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAkB;IAAI,CAAC;IAEtC,oCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAY,SAAI,IAAI,CAAC,MAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,QAAc;gBACnG,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;YACvB,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IAED,mCAAO,GAAP,UAAQ,QAAgB;QACtB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAY,SAAI,IAAI,CAAC,MAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACjF,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAClD,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IApCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAM4B,sDAAM;YACjB,8DAAc;YACd,wDAAa;YACb,wEAAgB;OARtB,iBAAiB,CAsC7B;IAAD,wBAAC;CAAA;AAtC6B;;;;;;;;;;;;ACb9B,mB;;;;;;;;;;;ACAA,+UAA+U,oXAAoX,aAAa,2a;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9pB;AACD;AACN;AAE2B;AACf;AAQvD;IAIE,2BAAmB,MAAwB,EAAU,KAAqB,EAAS,MAAqB;QAArF,WAAM,GAAN,MAAM,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAE7G,oCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC9G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAc,CAAC,CAAC;IACtF,CAAC;IAED,sCAAU,GAAV,UAAW,KAAY,EAAE,MAAc;QACrC,IAAM,QAAQ,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC7D,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAW,IAAI,CAAC,QAAQ,SAAI,4DAAY,SAAI,MAAQ,CAAC,CAAC;YACzE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC;IACT,CAAC;IAlBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAK2B,wEAAgB,EAAiB,8DAAc,EAAiB,wDAAa;OAJ7F,iBAAiB,CAoB7B;IAAD,wBAAC;CAAA;AApB6B","file":"modules-outlet-outlet-module.js","sourcesContent":["import { Routes } from '@angular/router';\nimport { ModifierFormComponent } from './modifier/modifier-form/modifier-form.component';\nimport { ModifierListComponent } from './modifier/modifier-list/modifier-list.component';\nimport { CategoryFormComponent } from './category/category-form/category-form.component';\nimport { CategoryListComponent } from './category/category-list/category-list.component';\nimport { MenuBuilderComponent } from './menu-builder/menu-builder.component';\nimport { MenuItemFormComponent } from './menu-item/menu-item-form/menu-item-form.component';\nimport { MenuItemListComponent } from './menu-item/menu-item-list/menu-item-list.component';\n\nexport const MenuBuilderRoutes: Routes = [{\n  path: 'menu-builder',\n  component: MenuBuilderComponent,\n},\n{\n  path: 'category',\n  children: [\n    {\n      path: '',\n      pathMatch: 'full',\n      component: CategoryListComponent,\n    },\n    {\n      path: 'add/new',\n      component: CategoryFormComponent,\n    },\n    {\n      path: 'edit/:id',\n      component: CategoryFormComponent,\n    },\n  ],\n},\n{\n  path: 'modifier',\n  children: [\n    {\n      path: '',\n      pathMatch: 'full',\n      component: ModifierListComponent,\n    },\n    {\n      path: 'add/new',\n      component: ModifierFormComponent,\n    },\n    {\n      path: 'edit/:id',\n      component: ModifierFormComponent,\n    },\n  ],\n},\n{\n  path: 'menu-item',\n  children: [\n    {\n      path: '',\n      pathMatch: 'full',\n      component: MenuItemListComponent,\n    },\n    {\n      path: 'add/new',\n      component: MenuItemFormComponent,\n    },\n    {\n      path: 'edit/:id',\n      component: MenuItemFormComponent,\n    },\n  ],\n}];\n","module.exports = \".category-img-big-icon {\\n    max-width: 125px;\\n    max-height: 125px;\\n  }\\n  \"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"!categoryID\\\">Add Category</h1>\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"categoryID\\\">Edit Category</h1>\\n    <br>\\n    <form class=\\\"form-horizontal\\\" id=\\\"categoryForm\\\" #CategoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"addCategory(CategoryForm)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-2\\\"></div>\\n        <div class=\\\"col-sm-8\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Category Name\\n                      <span>*</span>\\n                    </label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"category?.name\\\" #name=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"name.errors.required\\\">Category Name is required.</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Category Description\\n                    </label>\\n                    <input type=\\\"text\\\" name=\\\"desc\\\" [ngModel]=\\\"category?.desc\\\" #desc=\\\"ngModel\\\" class=\\\"form-control\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-sm-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Category Image </label>\\n                    <br/>\\n                    <input type=\\\"file\\\" (change)=\\\"uploadFile($event, 'image')\\\" accept=\\\".png,.jpg\\\" />\\n                    <input type=\\\"hidden\\\" name=\\\"image\\\" [ngModel]=\\\"category?.image\\\">\\n                    <br>\\n                    <br>\\n                    <span class=\\\"help-block\\\">\\n                      <small> Maximum File Size : 5mb. Supported file formats : .png & .jpg </small>\\n                    </span>\\n                    <div *ngIf=\\\"category?.image\\\">\\n                      <img [src]=\\\"category?.image\\\" class=\\\"category-img-big-icon\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteFile('image')\\\">Delete</button>\\n                    </div>\\n\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Sort Weight\\n                    </label>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"sort\\\" [ngModel]=\\\"category?.sort\\\" #sort=\\\"ngModel\\\">\\n                    <span class=\\\"help-block\\\">\\n                      <small> Enter higher value to list this item at the top of the category. (Ex. 100) </small>\\n                    </span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\"></div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"categoryID\\\">Update</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"!categoryID\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-inverse waves-effect waves-light\\\" [routerLink]=\\\"['../../../menu-builder']\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirestoreService } from '../../../../../core/firestore.service';\nimport { CategoryFirePath } from '../../../../firestore.path';\nimport { Category } from '../category.model';\n\n@Component({\n  selector: 'outlet-category-form',\n  templateUrl: './category-form.component.html',\n  styleUrls: ['./category-form.component.css'],\n})\nexport class CategoryFormComponent implements OnInit {\n  categoryID: string | null;\n  outletID: string | null;\n  category: Category;\n  bigIconFile: File | null;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    public toastr: ToastrService,\n    public fireDB: FirestoreService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.categoryID = this.route.snapshot.paramMap.get('id');\n    if (this.categoryID) {\n      this.fireDB.doc$(`outlets/${this.outletID}/${CategoryFirePath}/${this.categoryID}`).subscribe((categoryData: Category) => {\n        this.category = categoryData;\n      });\n    } else {\n      this.category = {};\n    }\n  }\n\n  uploadFile(event: any, type: string) {\n    if (event && type) {\n      if (type === 'image') {\n        if (this.categoryID) {\n          this.toastr.info('File uploading..', 'Wait!');\n          const uploadTask = this.fireDB.uploadFileToStorage(`outlet/${this.outletID}/category/${this.categoryID}/original.jpg`, event.target.files[0]);\n          uploadTask.then().then((snapshot) => {\n            snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n              if (this.category) {\n                this.category.image = imageUrl;\n              }\n              this.toastr.success('File uploaded', 'Success!');\n            });\n          });\n        } else {\n          this.bigIconFile = event.target.files[0];\n        }\n      }\n    }\n  }\n\n  deleteFile(type: string) {\n    if (type === 'image') {\n      if (this.categoryID) {\n        this.fireDB.deleteFileStorage(`outlet/${this.outletID}/category/${this.categoryID}/original.jpg`);\n        if (this.category && this.category.image) {\n          this.category.image = '';\n        }\n      } else {\n        this.bigIconFile = null;\n      }\n    }\n  }\n\n  addCategory(categoryForm: NgForm) {\n    if (!categoryForm.invalid) {\n      if (this.categoryID) {\n        this.fireDB.set(`outlets/${this.outletID}/${CategoryFirePath}/${this.categoryID}`, categoryForm.form.value);\n        this.toastr.success('Category Updated', 'Success!');\n      } else {\n        this.fireDB.add(`outlets/${this.outletID}/${CategoryFirePath}`, categoryForm.form.value)\n          .then((documentRef) => {\n            const categoryID = documentRef.id;\n            if (this.bigIconFile) {\n              const uploadTask = this.fireDB.uploadFileToStorage(`outlet/${this.outletID}/category/${categoryID}/original.jpg`, this.bigIconFile);\n              this.toastr.info('File uploading..', 'Wait!');\n              uploadTask.then().then((snapshot) => {\n                snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n                  documentRef.update({\n                    image: imageUrl,\n                  });\n                  this.router.navigate(['../../../menu-builder'], { relativeTo: this.route });\n                  this.toastr.success('Category Created', 'Success!');\n                });\n              });\n            } else {\n              this.router.navigate(['../../../menu-builder'], { relativeTo: this.route });\n              this.toastr.success('Category Created', 'Success!');\n            }\n          });\n      }\n      this.router.navigate(['../../../menu-builder'], { relativeTo: this.route });\n    } else {\n      this.fireDB.validateAllFormFields(categoryForm.form);\n      this.toastr.error('Fill up the form correctly!', 'Error!');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['../category/add/new']\\\">\\n        <i class=\\\"fa fa-plus\\\"></i> &nbsp; Add Category</button>\\n    </div>\\n    <br>\\n    <div>\\n      <table class=\\\"table table-bordered table-sm table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Name</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let category of categoryList | async\\\">\\n            <td>{{ category.name }}</td>\\n            <td class=\\\"actionList\\\">\\n              <button class=\\\"btn btn-sm btn-info\\\" type=\\\"button\\\" [routerLink]=\\\"['../category/edit', category.id]\\\">\\n                <i class=\\\"fa fa-pencil\\\"></i>\\n              </button>\\n              <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteCategory($event, category.id)\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../../core/firestore.service';\nimport { CategoryFirePath } from '../../../../firestore.path';\nimport { Category } from '../category.model';\n\n@Component({\n  selector: 'outlet-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css'],\n})\nexport class CategoryListComponent implements OnInit {\n  outletID: string | null;\n  categoryList: Observable<Category[]>;\n\n  constructor(public toastr: ToastrService, private route: ActivatedRoute, public fireDB: FirestoreService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 2].snapshot.paramMap.get('outletid');\n    this.categoryList = this.fireDB.colWithIds$(`outlets/${this.outletID}/${CategoryFirePath}`);\n  }\n\n  deleteCategory(event: Event, categoryID: string) {\n    const response = confirm('are you sure you want to delete?');\n    if (response) {\n      this.fireDB.delete(`outlets/${this.outletID}/${CategoryFirePath}/${categoryID}`);\n      this.toastr.success('Category Deleted', 'Success!');\n    }\n    return;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\">\\n    <ngb-tabset #tab=\\\"ngbTabset\\\">\\n      <ngb-tab id=\\\"tab-category\\\">\\n        <ng-template ngbTabTitle>\\n          <b>Category</b>\\n        </ng-template>\\n        <ng-template ngbTabContent>\\n          <outlet-category-list></outlet-category-list>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab id=\\\"tab-addon\\\">\\n        <ng-template ngbTabTitle>\\n          <b>Modifier</b>\\n        </ng-template>\\n        <ng-template ngbTabContent>\\n          <outlet-modifier-list></outlet-modifier-list>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n  <div class=\\\"col-md-9\\\">\\n    <outlet-menu-item-list></outlet-menu-item-list>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'outlet-menu-builder',\n  templateUrl: './menu-builder.component.html',\n  styleUrls: ['./menu-builder.component.css'],\n})\nexport class MenuBuilderComponent {\n  constructor(private router: Router,\n    private route: ActivatedRoute) {\n  }\n}\n","module.exports = \".menuItem-img-big-icon {\\n  max-width: 125px;\\n  max-height: 125px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-3\\\"></div>\\n  <div class=\\\"col-sm-6\\\">\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"!menuItemID\\\">Add Menu Item</h1>\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"menuItemID\\\">Edit Menu Item</h1>\\n    <form class=\\\"form-horizontal\\\" id=\\\"menuItemForm\\\" #MenuItemForm=\\\"ngForm\\\" (ngSubmit)=\\\"addMenuItem(MenuItemForm)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"custom-control custom-checkbox\\\">\\n                  <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"isDisabled\\\" name=\\\"isDisabled\\\" [ngModel]=\\\"menuItem?.isDisabled\\\" #isDisabled=\\\"ngModel\\\">\\n                  <label class=\\\"custom-control-label\\\" for=\\\"isDisabled\\\">Disable</label>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Item Name\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"menuItem?.name\\\" #name=\\\"ngModel\\\">\\n                <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"name.errors.required\\\">Item Name is required.</div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Category\\n                  <span>*</span>\\n                </label>\\n                <select class=\\\"custom-select col-12\\\" required name=\\\"category\\\" [ngModel]=\\\"menuItem?.category\\\" #category=\\\"ngModel\\\">\\n                  <option *ngFor=\\\"let option of categoryList\\\" [value]=\\\"option.id\\\">{{option.name}}</option>\\n                </select>\\n                <div *ngIf=\\\"category.invalid && (category.dirty || category.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"category.errors.required\\\">Category is required.</div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label>Description\\n                </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"desc\\\" #desc=\\\"ngModel\\\" [ngModel]=\\\"menuItem?.desc\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Price\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"price\\\" required [ngModel]=\\\"menuItem?.price\\\" #price=\\\"ngModel\\\">\\n                <div *ngIf=\\\"price.invalid && (price.dirty || price.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"price.errors.required\\\">Price is required.</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"card\\\" ngModelGroup=\\\"display\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Product Image </label>\\n                <br/>\\n                <input type=\\\"file\\\" (change)=\\\"uploadFile($event, 'image')\\\" accept=\\\".png,.jpg\\\" />\\n                <input type=\\\"hidden\\\" name=\\\"image\\\" [ngModel]=\\\"menuItem?.display?.image\\\">\\n                <br>\\n                <span class=\\\"help-block\\\">\\n                  <small> Maximum File Size : 5mb. Supported file formats : .png & .jpg </small>\\n                </span>\\n                <br>\\n                <div *ngIf=\\\"menuItem?.display?.image\\\">\\n                  <img [src]=\\\"menuItem?.display?.image\\\" class=\\\"menuItem-img-big-icon\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteFile('image')\\\">Delete</button>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Type </label>\\n                <br />\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"vegetarian\\\" name=\\\"serve\\\" [ngModel]=\\\"menuItem?.display?.serve\\\" #serve=\\\"ngModel\\\"\\n                        value=\\\"Veg\\\">\\n                      <label class=\\\"custom-control-label\\\" for=\\\"vegetarian\\\">Vegetarian</label>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"nonveg\\\" name=\\\"serve\\\" [ngModel]=\\\"menuItem?.display?.serve\\\" #serve=\\\"ngModel\\\"\\n                        value=\\\"NonVeg\\\">\\n                      <label class=\\\"custom-control-label\\\" for=\\\"nonveg\\\">Non-Veg</label>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"vegan\\\" name=\\\"serve\\\" [ngModel]=\\\"menuItem?.display?.serve\\\" #serve=\\\"ngModel\\\"\\n                        value=\\\"Vegan\\\">\\n                      <label class=\\\"custom-control-label\\\" for=\\\"vegan\\\">Vegan</label>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Display Ribbon\\n                </label>\\n                <select class=\\\"form-control\\\" name=\\\"ribbon\\\" [ngModel]=\\\"menuItem?.display?.ribbon\\\" #ribbon=\\\"ngModel\\\">\\n                  <option *ngFor=\\\"let option of displayRibbonList\\\" [value]=\\\"option.value\\\">{{option.label}}</option>\\n                </select>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\" ngModelGroup=\\\"modifier\\\">\\n              <h4 class=\\\"card-title\\\">Modifier</h4>\\n              <hr>\\n              <div class=\\\"form-group\\\">\\n                <label>Global Modifier\\n                </label>\\n                <ng-select [items]=\\\"modifierList\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" name=\\\"modifiers\\\" [ngModel]=\\\"menuItem?.modifier?.modifiers\\\"\\n                  #modifiers=\\\"ngModel\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"false\\\">\\n                </ng-select>\\n              </div>\\n              <label>Add Modifier Size</label>\\n              <div class=\\\"form-grouping-wrapper my-3\\\" ngModelGroup=\\\"size\\\">\\n                <div class=\\\"row\\\" *ngFor=\\\"let row of menuItem?.modifier?.size; let i = index\\\" [ngModelGroup]=\\\"i\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Name </label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"row?.name\\\" #name=\\\"ngModel\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Price </label>\\n                      <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"price\\\" required [ngModel]=\\\"row?.price\\\" #price=\\\"ngModel\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Size based Modifier</label>\\n                      <ng-select [items]=\\\"modifierList\\\" bindLabel=\\\"name\\\" required bindValue=\\\"id\\\" name=\\\"addons\\\" [ngModel]=\\\"row?.addons\\\" #addons=\\\"ngModel\\\"\\n                        [multiple]=\\\"true\\\" [closeOnSelect]=\\\"false\\\">\\n                      </ng-select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\">\\n                    <br>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteModifierSize(i)\\\">x</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"text-center\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"addMoreModifierSizes()\\\">+ Add Size</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"menuItemID\\\">Update</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"!menuItemID\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-inverse waves-effect waves-light\\\" [routerLink]=\\\"['../../../menu-builder']\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { toArray } from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirestoreService } from '../../../../../core/firestore.service';\nimport { MenuItemFirePath, ModifierFirePath, CategoryFirePath } from '../../../../firestore.path';\nimport { MenuItem, SelectFormVal, displayRibbonList } from '../menu-item.model';\n\n@Component({\n  selector: 'outlet-menu-item-form',\n  templateUrl: './menu-item-form.component.html',\n  styleUrls: ['./menu-item-form.component.css'],\n})\nexport class MenuItemFormComponent implements OnInit {\n  menuItemID: string | null;\n  outletID: string | null;\n  menuItem: MenuItem;\n  uomList: any;\n  categoryList: any;\n  displayRibbonList: SelectFormVal;\n  modifierList: any;\n  imageFile: File | null;\n\n  constructor(public fireDB: FirestoreService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.displayRibbonList = displayRibbonList;\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.menuItemID = this.route.snapshot.paramMap.get('id');\n    this.fireDB.docRoot$(`global/uom`).subscribe((uomData: any) => {\n      this.uomList = uomData.uom;\n    });\n    this.fireDB.colWithIds$(`outlets/${this.outletID}/${CategoryFirePath}`).subscribe((categoryData) => {\n      this.categoryList = categoryData;\n    });\n    this.fireDB.colWithIds$(`outlets/${this.outletID}/${ModifierFirePath}`).subscribe((modifierData) => {\n      this.modifierList = modifierData;\n    });\n    if (this.menuItemID) {\n      this.fireDB.doc$(`outlets/${this.outletID}/${MenuItemFirePath}/${this.menuItemID}`).subscribe((menuItemData: MenuItem) => {\n        this.menuItem = menuItemData;\n      });\n    } else {\n      this.menuItem = {};\n    }\n  }\n  uploadFile(event: any, type: string) {\n    if (event && type) {\n      if (type === 'image') {\n        if (this.menuItemID) {\n          this.toastr.info('File uploading..', 'Wait!');\n          const uploadTask = this.fireDB.uploadFileToStorage(`outlet/${this.outletID}/menu/${this.menuItemID}/original.jpg`, event.target.files[0]);\n          uploadTask.then().then((snapshot) => {\n            snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n              if (this.menuItem) {\n                this.menuItem.display = this.menuItem.display || {};\n                this.menuItem.display.image = imageUrl;\n              }\n              this.toastr.success('File uploaded', 'Success!');\n            });\n          });\n        } else {\n          this.imageFile = event.target.files[0];\n        }\n      }\n    }\n  }\n\n  deleteFile(type: string) {\n    if (type === 'image') {\n      if (this.menuItemID) {\n        this.fireDB.deleteFileStorage(`outlet/${this.outletID}/menu/${this.menuItemID}/original.jpg`);\n        if (this.menuItem && this.menuItem.display) {\n          this.menuItem.display.image = '';\n        }\n      } else {\n        this.imageFile = null;\n      }\n    }\n  }\n\n  addMoreModifierSizes() {\n    if (this.menuItem) {\n      this.menuItem.modifier = this.menuItem.modifier || {};\n      this.menuItem.modifier.size = this.menuItem.modifier.size || [];\n      this.menuItem.modifier.size.push({\n        name: '',\n        price: 0,\n        addons: [],\n      });\n    }\n  }\n\n  deleteModifierSize(i: number) {\n    if (this.menuItem && this.menuItem.modifier && this.menuItem.modifier.size) {\n      this.menuItem.modifier.size.splice(i, 1);\n    }\n  }\n\n  addMenuItem(menuItemForm: any) {\n    if (!menuItemForm.invalid) {\n      if (menuItemForm.form.value.addon && menuItemForm.form.value.addon.size) {\n        menuItemForm.form.value.addon.size = toArray(menuItemForm.form.value.addon.size);\n      }\n      if (this.menuItemID) {\n        this.fireDB.set(`outlets/${this.outletID}/${MenuItemFirePath}/${this.menuItemID}`, menuItemForm.form.value);\n        this.toastr.success('Menu Item Updated', 'Success!');\n      } else {\n        this.fireDB.add(`outlets/${this.outletID}/${MenuItemFirePath}`, menuItemForm.form.value)\n          .then((documentRef) => {\n            const menuItemID = documentRef.id;\n            if (this.imageFile) {\n              const uploadTask = this.fireDB.uploadFileToStorage(`outlet/${this.outletID}/menu/${menuItemID}/original.jpg`, this.imageFile);\n              this.toastr.info('File uploading..', 'Wait!');\n              uploadTask.then().then((snapshot) => {\n                snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n                  documentRef.update({\n                    display: {\n                      image: imageUrl,\n                    },\n                  });\n                  this.router.navigate(['../../../menu-builder'], { relativeTo: this.route });\n                  this.toastr.success('Menu Item Created', 'Success!');\n                });\n              });\n            } else {\n              this.router.navigate(['../../../menu-builder'], { relativeTo: this.route });\n              this.toastr.success('Menu Item Created', 'Success!');\n            }\n          });\n      }\n      this.router.navigate(['../../../menu-builder'], { relativeTo: this.route });\n    } else {\n      this.fireDB.validateAllFormFields(menuItemForm.form);\n      this.toastr.error('Fill up the form correctly!', 'Error!');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center\\\">\\n  <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['../menu-item/add/new']\\\">\\n    <i class=\\\"fa fa-plus\\\"></i> &nbsp; Add Menu Item</button>\\n</div>\\n<br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\" *ngFor=\\\"let category of finalListData\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h6 class=\\\"card-title\\\">\\n          {{ category.name }}</h6>\\n        <div class=\\\"text-center m-3\\\" *ngIf=\\\"!category.value\\\">\\n          <h5 class=\\\"text-danger\\\">No Menu items in this category</h5>\\n        </div>\\n        <table class=\\\"table table-bordered table-sm table-hover\\\" *ngIf=\\\"category.value\\\">\\n          <thead>\\n            <tr>\\n              <th>Name</th>\\n              <th>Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let menuItem of category.value\\\">\\n              <td>{{ menuItem.name }}</td>\\n              <td class=\\\"actionList\\\">\\n                <button class=\\\"btn btn-sm btn-info\\\" type=\\\"button\\\" [routerLink]=\\\"['../menu-item/edit', menuItem.id]\\\">\\n                  <i class=\\\"fa fa-pencil\\\"></i>\\n                </button>\\n                <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteMenuItem($event, menuItem.id)\\\">\\n                  <i class=\\\"fa fa-trash\\\"></i>\\n                </button>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { groupBy, keyBy, merge, mapValues, toArray } from 'lodash';\nimport { FirestoreService } from '../../../../../core/firestore.service';\nimport { MenuItemFirePath, CategoryFirePath } from '../../../../firestore.path';\nimport { MenuItem } from '../menu-item.model';\nimport { Category } from '../../category/category.model';\n\n@Component({\n  selector: 'outlet-menu-item-list',\n  templateUrl: './menu-item-list.component.html',\n  styleUrls: ['./menu-item-list.component.css'],\n})\nexport class MenuItemListComponent implements OnInit {\n  outletID: string | null;\n  menuItemList: Observable<MenuItem[]>;\n  menuItemListData: MenuItem[];\n  categoryListData: any;\n  finalListData: any;\n\n  constructor(public fireDB: FirestoreService, private route: ActivatedRoute, public toastr: ToastrService) { }\n\n  async ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 2].snapshot.paramMap.get('outletid');\n    await this.fireDB.colWithIds$(`outlets/${this.outletID}/${CategoryFirePath}`).subscribe((categoryData: Category[]) => {\n      this.categoryListData = keyBy(categoryData, 'id');\n    });\n    this.fireDB.colWithIds$(`outlets/${this.outletID}/${MenuItemFirePath}`).subscribe((menuItemsData: MenuItem[]) => {\n      this.menuItemListData = menuItemsData;\n      const categoryWise = groupBy(menuItemsData, 'category');\n      this.finalListData = toArray(merge({}, this.categoryListData, mapValues(categoryWise, (value) => ({ value }))));\n    });\n  }\n\n  deleteMenuItem(event: Event, menuItemID: string) {\n    const response = confirm('are you sure you want to delete?');\n    if (response) {\n      this.fireDB.delete(`outlets/${this.outletID}/${MenuItemFirePath}/${menuItemID}`);\n      this.toastr.success('Menu Item Deleted', 'Success!');\n    }\n    return;\n  }\n\n}\n","export interface MenuItem {\n  id?: string;\n  isDisabled?: boolean;\n  name?: string;\n  category?: string;\n  desc?: string;\n  display?: {\n    image?: string;\n    serve?: string;\n    ribbon?: string;\n  };\n  modifier?: {\n    modifiers?: Array<string>;\n    size?: Array<Row>;\n  };\n  price?: number;\n}\n\ninterface Row {\n  name: string;\n  price: number;\n  addons: Array<string>;\n}\n\nexport interface SelectFormVal {\n  [index: number]: {\n    label: string;\n    value: string;\n  };\n}\nexport const displayRibbonList: SelectFormVal = [\n  { label: 'None', value: 'None' },\n  { label: 'Best Seller', value: 'Best Seller' },\n  { label: 'Chef`s Special', value: 'Chef`s Special' },\n  { label: 'Recommended', value: 'Recommended' },\n  { label: 'Low Calorie', value: 'Low Calorie' },\n  { label: 'Spicy', value: 'Spicy' },\n  { label: 'Healthy', value: 'Healthy' },\n  { label: 'Trending', value: 'Recommended' },\n];\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"!modifierID\\\">Add Modifier</h1>\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"modifierID\\\">Edit Modifier</h1>\\n    <form class=\\\"form-horizontal\\\" id=\\\"modifierForm\\\" #ModifierForm=\\\"ngForm\\\" (ngSubmit)=\\\"addModifier(ModifierForm)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-2\\\"></div>\\n        <div class=\\\"col-sm-8\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Modifier Group Name\\n                      <span>*</span>\\n                    </label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"modifier?.name\\\" #name=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"name.errors.required\\\">Modifier Group Name is required.</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"custom-control custom-checkbox\\\">\\n                      <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"isMultiChoice\\\" name=\\\"isMultiChoice\\\" [ngModel]=\\\"modifier?.isMultiChoice\\\"\\n                        #multiChoice=\\\"ngModel\\\">\\n                      <label class=\\\"custom-control-label\\\" for=\\\"isMultiChoice\\\">Allow Multiple Choice</label>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"row\\\" [hidden]=\\\"!multiChoice.value\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label>Minimum Choice\\n                          <span>*</span>\\n                        </label>\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"minChoice\\\" [required]=\\\"multiChoice.value\\\" [ngModel]=\\\"modifier?.minChoice\\\"\\n                          #minChoice=\\\"ngModel\\\">\\n                        <div *ngIf=\\\"minChoice.invalid && (minChoice.dirty || minChoice.touched)\\\" class=\\\"alert alert-danger\\\">\\n                          <div *ngIf=\\\"minChoice.errors.required\\\">Minimum Choice is required.</div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label>Maximum Choice\\n                          <span>*</span>\\n                        </label>\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"maxChoice\\\" [required]=\\\"multiChoice.value\\\" [ngModel]=\\\"modifier?.maxChoice\\\"\\n                          #maxChoice=\\\"ngModel\\\">\\n                        <div *ngIf=\\\"maxChoice.invalid && (maxChoice.dirty || maxChoice.touched)\\\" class=\\\"alert alert-danger\\\">\\n                          <div *ngIf=\\\"maxChoice.errors.required\\\">Maximum Choice is required.</div>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <label>Add Modifier Items</label>\\n              <div class=\\\"form-grouping-wrapper my-3\\\" ngModelGroup=\\\"item\\\">\\n                <div class=\\\"row\\\" *ngFor=\\\"let row of modifier?.item; let i = index\\\" [ngModelGroup]=\\\"i\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Modifier Item </label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"row?.name\\\" #name=\\\"ngModel\\\">\\n                      <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"name.errors.required\\\">Maximum Choice is required.</div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Price </label>\\n                      <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"price\\\" required [ngModel]=\\\"row?.price\\\" #price=\\\"ngModel\\\">\\n                      <div *ngIf=\\\"price.invalid && (price.dirty || price.touched)\\\" class=\\\"alert alert-danger\\\">\\n                        <div *ngIf=\\\"price.errors.required\\\">Maximum Choice is required.</div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-1\\\">\\n                    <br>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteRow(i)\\\">x</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"text-center\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"addMoreRows()\\\">+ Add Modifier Item</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\"></div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"modifierID\\\">Update</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"!modifierID\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-inverse waves-effect waves-light\\\" [routerLink]=\\\"['../../../menu-builder']\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { toArray } from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirestoreService } from '../../../../../core/firestore.service';\nimport { ModifierFirePath } from '../../../../firestore.path';\nimport { Modifier } from '../modifier.model';\n\n@Component({\n  selector: 'outlet-modifier-form',\n  templateUrl: './modifier-form.component.html',\n  styleUrls: ['./modifier-form.component.css'],\n})\nexport class ModifierFormComponent implements OnInit {\n  modifierID: string | null;\n  outletID: string | null;\n  modifier: Modifier;\n  constructor(public fireDB: FirestoreService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.modifierID = this.route.snapshot.paramMap.get('id');\n    if (this.modifierID) {\n      this.fireDB.doc$(`outlets/${this.outletID}/${ModifierFirePath}/${this.modifierID}`).subscribe((modifierData: Modifier) => {\n        this.modifier = modifierData;\n      });\n    } else {\n      this.modifier = {};\n    }\n  }\n\n  addMoreRows() {\n    if (this.modifier) {\n      this.modifier.item = this.modifier.item || [];\n      this.modifier.item.push({\n        name: '',\n        price: 0,\n        ingredient: '',\n      });\n    }\n  }\n\n  deleteRow(i: number) {\n    if (this.modifier && this.modifier.item) {\n      this.modifier.item.splice(i, 1);\n    }\n  }\n\n  addModifier(modifierForm: any) {\n    if (!modifierForm.invalid) {\n      if (modifierForm.form.value.item) {\n        modifierForm.form.value.item = toArray(modifierForm.form.value.item);\n      }\n      if (this.modifierID) {\n        this.fireDB.set(`outlets/${this.outletID}/${ModifierFirePath}/${this.modifierID}`, modifierForm.form.value);\n        this.toastr.success('Modifier Updated', 'Success!');\n      } else {\n        this.fireDB.add(`outlets/${this.outletID}/${ModifierFirePath}`, modifierForm.form.value);\n        this.toastr.success('Modifier Created', 'Success!');\n      }\n      this.router.navigate(['../../../menu-builder'], { relativeTo: this.route });\n    } else {\n      this.fireDB.validateAllFormFields(modifierForm.form);\n      this.toastr.error('Fill up the form correctly!', 'Error!');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['../modifier/add/new']\\\">\\n        <i class=\\\"fa fa-plus\\\"></i> &nbsp; Add Modifier</button>\\n    </div>\\n    <br>\\n    <div>\\n      <table class=\\\"table table-bordered table-sm table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th>Name</th>\\n            <th>Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let modifier of modifierList | async\\\">\\n            <td>{{ modifier.name }}</td>\\n            <td class=\\\"actionList\\\">\\n              <button class=\\\"btn btn-sm btn-info\\\" type=\\\"button\\\" [routerLink]=\\\"['../modifier/edit', modifier.id]\\\">\\n                <i class=\\\"fa fa-pencil\\\"></i>\\n              </button>\\n              <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteModifier($event, modifier.id)\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../../core/firestore.service';\nimport { ModifierFirePath } from '../../../../firestore.path';\nimport { Modifier } from '../modifier.model';\n\n@Component({\n  selector: 'outlet-modifier-list',\n  templateUrl: './modifier-list.component.html',\n  styleUrls: ['./modifier-list.component.css'],\n})\nexport class ModifierListComponent implements OnInit {\n  outletID: string | null;\n  modifierList: Observable<Modifier[]>;\n\n  constructor(public fireDB: FirestoreService, private route: ActivatedRoute, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 2].snapshot.paramMap.get('outletid');\n    this.modifierList = this.fireDB.colWithIds$(`outlets/${this.outletID}/${ModifierFirePath}`);\n  }\n\n  deleteModifier(event: Event, modifierID: string) {\n    const response = confirm('are you sure you want to delete?');\n    if (response) {\n      this.fireDB.delete(`outlets/${this.outletID}/${ModifierFirePath}/${modifierID}`);\n      this.toastr.success('Modifier Deleted', 'Success!');\n    }\n    return;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"!menuID\\\">Add Menu</h1>\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"menuID\\\">Edit Menu</h1>\\n    <br>\\n    <form class=\\\"form-horizontal\\\" id=\\\"menuForm\\\" #MenuForm=\\\"ngForm\\\" (ngSubmit)=\\\"addMenu(MenuForm)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\"></div>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Menu Name\\n                      <span>*</span>\\n                    </label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"menu?.name\\\" #name=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"name.errors.required\\\">Menu Name is required.</div>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Menu Description\\n                    </label>\\n                    <input type=\\\"text\\\" name=\\\"desc\\\" #desc=\\\"ngModel\\\" [ngModel]=\\\"menu?.desc\\\" class=\\\"form-control\\\">\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Categories\\n                      <span>*</span>\\n                    </label>\\n                    <ng-select [items]=\\\"menuItems\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" name=\\\"category\\\" required [ngModel]=\\\"menu?.category\\\" #category=\\\"ngModel\\\"\\n                      [multiple]=\\\"true\\\" [closeOnSelect]=\\\"false\\\">\\n                    </ng-select>\\n                    <div *ngIf=\\\"category.invalid && (category.dirty || category.touched)\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"category.errors.required\\\">Categories is required.</div>\\n                    </div>\\n                  </div>\\n                  <label>Menu Availability</label>\\n                  <div class=\\\"form-grouping-wrapper my-3\\\" ngModelGroup=\\\"opHrs\\\">\\n                    <div class=\\\"row\\\" *ngFor=\\\"let opHr of menu?.opHrs; let i = index\\\" [ngModelGroup]=\\\"i\\\">\\n                      <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label>Day\\n                          </label>\\n                          <select class=\\\"custom-select col-12\\\" name=\\\"day\\\" [ngModel]=\\\"opHr?.day\\\" #day=\\\"ngModel\\\" required>\\n                            <option *ngFor=\\\"let option of dayList\\\" [value]=\\\"option.value\\\">{{option.label}}</option>\\n                          </select>\\n                          <div *ngIf=\\\"day.invalid && (day.dirty || day.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"day.errors.required\\\">Day is required.</div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label>From</label>\\n                          <select class=\\\"form-control\\\" name=\\\"fromTime\\\" [ngModel]=\\\"opHr?.fromTime\\\" #fromTime=\\\"ngModel\\\" required>\\n                            <option *ngFor=\\\"let option of this.fireDB.getTimeRangeArray()\\\" [value]=\\\"option.value\\\">{{option.label}}</option>\\n                          </select>\\n                          <div *ngIf=\\\"fromTime.invalid && (fromTime.dirty || fromTime.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"fromTime.errors.required\\\">Day is required.</div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label>To</label>\\n                          <select class=\\\"form-control\\\" name=\\\"toTime\\\" [ngModel]=\\\"opHr?.toTime\\\" #toTime=\\\"ngModel\\\" required>\\n                            <option *ngFor=\\\"let option of this.fireDB.getTimeRangeArray()\\\" [value]=\\\"option.value\\\">{{option.label}}</option>\\n                          </select>\\n                          <div *ngIf=\\\"toTime.invalid && (toTime.dirty || toTime.touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"toTime.errors.required\\\">Day is required.</div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-1 mt-1\\\">\\n                        <br>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteOperatingHour(i)\\\">\\n                          <i class=\\\"fa fa-times\\\"></i>\\n                        </button>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"text-center\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" (click)=\\\"addMoreOperatingHours()\\\">\\n                        <i class=\\\"fa fa-plus\\\"></i> &nbsp; Add</button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-3\\\"></div>\\n        </div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"menuID\\\">Update</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"!menuID\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-inverse waves-effect waves-light\\\" [routerLink]=\\\"['../..']\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { toArray } from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { MenuFirePath, CategoryFirePath } from '../../../firestore.path';\nimport { Menu, SelectFormVal, dayList } from '../menu.model';\n\n@Component({\n  selector: 'outlet-menu-form',\n  templateUrl: './menu-form.component.html',\n  styleUrls: ['./menu-form.component.css'],\n})\nexport class MenuFormComponent implements OnInit {\n  menuID: string | null;\n  outletID: string | null;\n  menu: Menu;\n  menuItems: any;\n  dayList: SelectFormVal;\n  constructor(public fireDB: FirestoreService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.dayList = dayList;\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.fireDB.colWithIds$(`outlets/${this.outletID}/${CategoryFirePath}`).subscribe((menuItemsData) => {\n      this.menuItems = menuItemsData;\n    });\n    this.menuID = this.route.snapshot.paramMap.get('id');\n    if (this.menuID) {\n      this.fireDB.doc$(`outlets/${this.outletID}/${MenuFirePath}/${this.menuID}`).subscribe((menuData: Menu) => {\n        this.menu = menuData;\n      });\n    } else {\n      this.menu = {};\n    }\n  }\n\n  addMoreOperatingHours() {\n    if (this.menu) {\n      this.menu.opHrs = this.menu.opHrs || [];\n      this.menu.opHrs.push({\n        fromTime: '',\n        toTime: '',\n        day: '',\n      });\n    }\n  }\n\n  deleteOperatingHour(i: number) {\n    if (this.menu && this.menu.opHrs) {\n      this.menu.opHrs.splice(i, 1);\n    }\n  }\n  addMenu(menuForm: any) {\n    if (!menuForm.invalid) {\n      if (menuForm.form.value.opHrs) {\n        menuForm.form.value.opHrs = toArray(menuForm.form.value.opHrs);\n      }\n      if (this.menuID) {\n        this.fireDB.set(`outlets/${this.outletID}/${MenuFirePath}/${this.menuID}`, menuForm.form.value);\n        this.toastr.success('Menu Updated', 'Success!');\n      } else {\n        this.fireDB.add(`outlets/${this.outletID}/${MenuFirePath}`, menuForm.form.value);\n        this.toastr.success('Menu Created', 'Success!');\n      }\n      this.router.navigate(['../..'], { relativeTo: this.route });\n    } else {\n      this.fireDB.validateAllFormFields(menuForm.form);\n      this.toastr.error('Fill up the form correctly!', 'Error!');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2\\\"></div>\\n  <div class=\\\"col-lg-8\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['add/new']\\\">\\n            <i class=\\\"fa fa-plus\\\"></i> &nbsp; Add Menu</button>\\n        </div>\\n        <br>\\n        <div>\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th>Menu Name</th>\\n                <th>Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let menu of menuList | async\\\">\\n                <td>{{ menu.name }}</td>\\n                <td class=\\\"actionList\\\">\\n                  <button class=\\\"btn btn-sm btn-info\\\" type=\\\"button\\\" [routerLink]=\\\"['edit', menu.id]\\\">\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteMenu($event, menu.id)\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-2\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { MenuFirePath } from '../../../firestore.path';\nimport { Menu } from '../menu.model';\n\n@Component({\n  selector: 'outlet-menu-list',\n  templateUrl: './menu-list.component.html',\n  styleUrls: ['./menu-list.component.css'],\n})\nexport class MenuListComponent implements OnInit {\n  menuList: Observable<Menu[]>;\n  outletID: string | null;\n\n  constructor(public fireDB: FirestoreService, private route: ActivatedRoute, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.menuList = this.fireDB.colWithIds$(`outlets/${this.outletID}/${MenuFirePath}`);\n  }\n\n  deleteMenu(event: Event, menuID: string) {\n    const response = confirm('are you sure you want to delete?');\n    if (response) {\n      this.fireDB.delete(`outlets/${this.outletID}/${MenuFirePath}/${menuID}`);\n      this.toastr.success('Menu Deleted', 'Success!');\n    }\n    return;\n  }\n\n}\n","export interface Menu {\n  id?: string;\n  name?: string;\n  desc?: string;\n  category?: Array<string>;\n  opHrs?: Array<OpHr>;\n}\n\ninterface OpHr {\n  fromTime: string;\n  toTime: string;\n  day: string;\n}\nexport interface SelectFormVal {\n  [index: number]: {\n    label: string;\n    value: string;\n  };\n}\nexport const dayList: SelectFormVal = [\n  { label: 'Everyday', value: 'Everyday' },\n  { label: 'Weekday', value: 'Weekday' },\n  { label: 'Sunday', value: 'Sunday' },\n  { label: 'Monday', value: 'Monday' },\n  { label: 'Tuesday', value: 'Tuesday' },\n  { label: 'Wednesday', value: 'Wednesday' },\n  { label: 'Thursday', value: 'Thursday' },\n  { label: 'Friday', value: 'Friday' },\n  { label: 'Saturday', value: 'Saturday' },\n];\n","module.exports = \".nav-link.dropdown-toggle {\\n  cursor: pointer;\\n}\\n\\n.navbar-nav .nav-link.active {\\n  border-radius: 4px;\\n  color: #ffffff;\\n  background-color: #745af2;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-white\\\">\\n  <a class=\\\"navbar-brand\\\">Manage Outlet</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" (click)=\\\"showMobileMenu = !showMobileMenu\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"navbar-collapse\\\" [ngClass]=\\\"{'collapse': !showMobileMenu}\\\">\\n    <ul class=\\\"navbar-nav mr-auto mt-2 mt-lg-0\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['menu-builder']\\\">Manage</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['menu']\\\">Menu</a>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\">\\n          POS\\n        </a>\\n        <div class=\\\"dropdown-menu\\\">\\n          <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['pos-item']\\\">POS Item</a>\\n          <a class=\\\"dropdown-item\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['pos-modifier']\\\">POS Modifier</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['user']\\\">User</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <select class=\\\"custom-select\\\" name=\\\"routeOutlet\\\" (change)=\\\"outletChangeRoute()\\\" [(ngModel)]=\\\"outletIDSelect\\\">\\n        <option *ngFor=\\\"let option of outletList\\\" [value]=\\\"option.id\\\" [selected]=\\\"option.id === outletID\\\">{{option.name}}</option>\\n      </select>\\n    </form>\\n  </div>\\n</nav>\\n<br>\\n<router-outlet></router-outlet>\\n\"","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as $ from 'jquery';\nimport { FirestoreService } from '../../../core/firestore.service';\n\n@Component({\n  selector: 'outlet-outlet-route',\n  templateUrl: './outlet-route.component.html',\n  styleUrls: ['./outlet-route.component.css'],\n})\nexport class OutletRouteComponent implements AfterViewInit, OnInit {\n  outletID: string | null;\n  outletList: any;\n  outletIDSelect: any;\n  showMobileMenu: boolean;\n  constructor(private router: Router,\n    public fireDB: FirestoreService,\n    private route: ActivatedRoute) {\n    this.showMobileMenu = false;\n    this.outletIDSelect = [];\n  }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 1].snapshot.paramMap.get('outletid');\n    this.fireDB.colWithIds$(`outlets`).subscribe((outletList: any) => {\n      this.outletList = outletList;\n    });\n  }\n\n  outletChangeRoute() {\n    this.router.navigate([`/outlet/dash/${this.outletIDSelect}/menu`]);\n  }\n\n  ngAfterViewInit() {\n    $('.dropdown-toggle').on('click', (event) => {\n      $('.dropdown-menu').removeClass('show');\n      $(event.target).next().toggleClass('show');\n    });\n    $('.dropdown-item').on('click', (event) => {\n      $('.dropdown-menu').removeClass('show');\n    });\n    $('.nav-item:not(.dropdown)').on('click', (event) => {\n      $('.dropdown-menu').removeClass('show');\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { QuillModule } from 'ngx-quill';\nimport { SharedModule } from '../../core/shared.module';\nimport { ModifierFormComponent } from './builder/modifier/modifier-form/modifier-form.component';\nimport { ModifierListComponent } from './builder/modifier/modifier-list/modifier-list.component';\nimport { CategoryFormComponent } from './builder/category/category-form/category-form.component';\nimport { CategoryListComponent } from './builder/category/category-list/category-list.component';\nimport { MenuBuilderComponent } from './builder/menu-builder/menu-builder.component';\nimport { MenuItemFormComponent } from './builder/menu-item/menu-item-form/menu-item-form.component';\nimport { MenuItemListComponent } from './builder/menu-item/menu-item-list/menu-item-list.component';\nimport { MenuFormComponent } from './menu/menu-form/menu-form.component';\nimport { MenuListComponent } from './menu/menu-list/menu-list.component';\nimport { OutletRouteComponent } from './outlet-route/outlet-route.component';\nimport { OutletRoutes } from './outlet.routing';\nimport { OutletFormComponent } from './outlets/outlet-form/outlet-form.component';\nimport { OutletListComponent } from './outlets/outlet-list/outlet-list.component';\nimport { UserFormComponent } from './user/user-form/user-form.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { PosItemComponent } from './pos/pos-item/pos-item.component';\nimport { PosModifierComponent } from './pos/pos-modifier/pos-modifier.component';\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    SharedModule,\n    NgSelectModule,\n    QuillModule,\n    NgbModule,\n    RouterModule.forChild(OutletRoutes),\n  ],\n  declarations: [\n    OutletFormComponent,\n    OutletListComponent,\n    OutletRouteComponent,\n    MenuBuilderComponent,\n    CategoryFormComponent,\n    CategoryListComponent,\n    MenuItemFormComponent,\n    MenuItemListComponent,\n    ModifierFormComponent,\n    ModifierListComponent,\n    MenuListComponent,\n    MenuFormComponent,\n    UserFormComponent,\n    UserListComponent,\n    PosItemComponent,\n    PosModifierComponent,\n  ],\n})\nexport class OutletModule { }\n","import { Routes } from '@angular/router';\nimport { MenuBuilderRoutes } from './builder/builder.routing';\nimport { MenuFormComponent } from './menu/menu-form/menu-form.component';\nimport { MenuListComponent } from './menu/menu-list/menu-list.component';\nimport { OutletRouteComponent } from './outlet-route/outlet-route.component';\nimport { OutletFormComponent } from './outlets/outlet-form/outlet-form.component';\nimport { OutletListComponent } from './outlets/outlet-list/outlet-list.component';\nimport { UserFormComponent } from './user/user-form/user-form.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { PosItemComponent } from './pos/pos-item/pos-item.component';\nimport { PosModifierComponent } from './pos/pos-modifier/pos-modifier.component';\nimport { PosRoutes } from './pos/pos.route';\n\nexport const OutletRoutes: Routes = [\n  {\n    path: 'outlets',\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        component: OutletListComponent,\n      },\n      {\n        path: 'add/new',\n        component: OutletFormComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: OutletFormComponent,\n      },\n    ],\n  },\n  {\n    path: 'dash/:outletid',\n    component: OutletRouteComponent,\n    children: [\n      ...MenuBuilderRoutes,\n      {\n        path: 'menu',\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            component: MenuListComponent,\n          },\n          {\n            path: 'add/new',\n            component: MenuFormComponent,\n          },\n          {\n            path: 'edit/:id',\n            component: MenuFormComponent,\n          },\n        ],\n      },\n      {\n        path: 'user',\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            component: UserListComponent,\n          },\n          {\n            path: 'add/new',\n            component: UserFormComponent,\n          },\n        ],\n      },\n      {\n        path: 'pos-item',\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            component: PosItemComponent,\n          },\n\n        ],\n      },\n      {\n        path: 'pos-modifier',\n        children: [\n          {\n            path: '',\n            pathMatch: 'full',\n            component: PosModifierComponent,\n          },\n\n        ],\n      },\n    ],\n  },\n];\n","module.exports = \".outlet-img-big-icon {\\n  max-width: 125px;\\n  max-height: 125px;\\n}\\n\"","module.exports = \"<h1 class=\\\"text-center title\\\" *ngIf=\\\"!outletID\\\">Add New Restaurant</h1>\\n<h1 class=\\\"text-center title\\\" *ngIf=\\\"outletID\\\">Edit Restaurant</h1>\\n<br>\\n<form class=\\\"form-horizontal\\\" id=\\\"outletForm\\\" #OutletForm=\\\"ngForm\\\" (ngSubmit)=\\\"addOutlet(OutletForm)\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\"></div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Restaurant Name\\n              <span>*</span>\\n            </label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"outlet?.name\\\" #name=\\\"ngModel\\\">\\n            <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div *ngIf=\\\"name.errors.required\\\">Restaurant Name is required.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"custom-control custom-checkbox\\\">\\n              <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"isDisable\\\" name=\\\"isDisable\\\" [ngModel]=\\\"outlet?.isDisable\\\">\\n              <label class=\\\"custom-control-label\\\" for=\\\"isDisable\\\">Disable Restaurant</label>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Restaurant Logo\\n            </label>\\n            <input type=\\\"file\\\" (change)=\\\"uploadFile($event, 'image')\\\" accept=\\\".png,.jpg\\\" />\\n            <input type=\\\"hidden\\\" name=\\\"image\\\" [ngModel]=\\\"outlet?.image\\\">\\n            <br>\\n            <br>\\n            <div *ngIf=\\\"outlet?.image\\\">\\n              <img [src]=\\\"outlet?.image\\\" class=\\\"outlet-img-big-icon\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteFile('image')\\\">Delete</button>\\n            </div>\\n            <span class=\\\"help-block\\\">\\n              <small> Maximum File Size : 5mb. Supported file formats : .png & .jpg </small>\\n            </span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Website\\n            </label>\\n            <input class=\\\"form-control\\\" pattern=\\\"^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/.*)?$\\\"\\n              type=\\\"text\\\" name=\\\"website\\\" [ngModel]=\\\"outlet?.website\\\" #website=\\\"ngModel\\\">\\n            <div *ngIf=\\\"website.errors && (website.dirty || website.touched)\\\" class=\\\"alert alert-danger\\\">\\n              <div [hidden]=\\\"!website.errors.pattern\\\">\\n                Enter a valid URL!\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Sales Tax Percent\\n            </label>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"tax\\\" [ngModel]=\\\"outlet?.tax\\\" #tax=\\\"ngModel\\\" />\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Order Type\\n            </label>\\n            <div class=\\\"row\\\" ngModelGroup=\\\"ordertype\\\">\\n              <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"custom-control custom-checkbox\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"forhere\\\" name=\\\"forhere\\\" [ngModel]=\\\"outlet?.ordertype?.forhere\\\">\\n                    <label class=\\\"custom-control-label\\\" for=\\\"forhere\\\">For Here </label>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"custom-control custom-checkbox\\\">\\n                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"togo\\\" name=\\\"togo\\\" [ngModel]=\\\"outlet?.ordertype?.togo\\\">\\n                    <label class=\\\"custom-control-label\\\" for=\\\"togo\\\">To Go</label>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Omnivore API\\n            </label>\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"omnivore\\\" [ngModel]=\\\"outlet?.omnivore\\\" #omnivore=\\\"ngModel\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Google Analytics\\n            </label>\\n            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"analytics\\\" [ngModel]=\\\"outlet?.analytics\\\" #analytics=\\\"ngModel\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Confirmation Page\\n            </label>\\n            <quill-editor name=\\\"confirmation\\\" [ngModel]=\\\"outlet?.confirmation\\\" #confirmation=\\\"ngModel\\\" [style]=\\\"{height: '150px'}\\\" [modules]=\\\"quillToolbar\\\"></quill-editor>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Credit Card Decline Error Message\\n            </label>\\n            <textarea class=\\\"form-control\\\" rows=\\\"3\\\" name=\\\"errmag\\\" [ngModel]=\\\"outlet?.errmag\\\" #errmag=\\\"ngModel\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Currency\\n            </label>\\n            <select class=\\\"form-control\\\" name=\\\"currency\\\" [ngModel]=\\\"outlet?.currency\\\" #currency=\\\"ngModel\\\">\\n              <option *ngFor=\\\"let option of currencyList\\\" [value]=\\\"option.value\\\">{{option.label}}</option>\\n            </select>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"text-center\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"!outletID\\\">Create Restaurant</button>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"outletID\\\">Update</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-lg btn-inverse waves-effect waves-light\\\" [routerLink]=\\\"['../..']\\\">Cancel</button>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, toArray } from 'lodash';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { OutletFirePath } from '../../../firestore.path';\nimport { Outlet, SelectFormVal, orderTypeList, currencyList } from '../outlet.model';\n\n@Component({\n  selector: 'outlets-outlet-form',\n  templateUrl: './outlet-form.component.html',\n  styleUrls: ['./outlet-form.component.css'],\n})\nexport class OutletFormComponent implements OnInit {\n  outletID: string | null;\n  outlet: Outlet;\n  bigIconFile: File | null;\n  orderTypeList: SelectFormVal;\n  currencyList: SelectFormVal;\n  quillToolbar: any;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    public toastr: ToastrService,\n    public fireDB: FirestoreService) { }\n\n  ngOnInit() {\n    this.orderTypeList = orderTypeList;\n    this.currencyList = currencyList;\n    this.outletID = this.route.snapshot.paramMap.get('id');\n    if (this.outletID) {\n      this.fireDB.doc$(`${OutletFirePath}/${this.outletID}`).subscribe((outletData: Outlet) => {\n        this.outlet = outletData;\n      });\n    } else {\n      this.outlet = {};\n    }\n  }\n\n  uploadFile(event: any, type: string) {\n    if (event && type) {\n      if (type === 'image') {\n        if (this.outletID) {\n          this.toastr.info('File uploading..', 'Wait!');\n          const uploadTask = this.fireDB.uploadFileToStorage(`outlet/${this.outletID}/logo/original.jpg`, event.target.files[0]);\n          uploadTask.then().then((snapshot) => {\n            snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n              if (this.outlet) {\n                this.outlet.image = imageUrl;\n              }\n              this.toastr.success('File uploaded', 'Success!');\n            });\n          });\n        } else {\n          this.bigIconFile = event.target.files[0];\n        }\n      }\n    }\n  }\n\n  deleteFile(type: string) {\n    if (type === 'image') {\n      if (this.outletID) {\n        this.fireDB.deleteFileStorage(`outlet/${this.outletID}/logo/original.jpg`);\n        if (this.outlet) {\n          this.outlet.image = '';\n        }\n      } else {\n        this.bigIconFile = null;\n      }\n    }\n  }\n\n  addOutlet(outletForm: NgForm) {\n    if (!outletForm.invalid) {\n      if (outletForm.form.value.opHrs) {\n        outletForm.form.value.opHrs = toArray(outletForm.form.value.opHrs);\n      }\n      if (this.outletID) {\n        this.fireDB.set(`${OutletFirePath}/${this.outletID}`, outletForm.form.value);\n        this.toastr.success('Restaurant Updated', 'Success!');\n        this.router.navigate(['../..'], { relativeTo: this.route });\n      } else {\n        this.fireDB.add(OutletFirePath, outletForm.form.value)\n          .then((documentRef) => {\n            const outletID = documentRef.id;\n            if (this.bigIconFile) {\n              const uploadTask = this.fireDB.uploadFileToStorage(`outlet/${outletID}/logo/original.jpg`, this.bigIconFile);\n              this.toastr.info('File uploading..', 'Wait!');\n              uploadTask.then().then((snapshot) => {\n                snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n                  documentRef.update({\n                    info: {\n                      image: imageUrl,\n                    },\n                  });\n                  this.router.navigate(['../..'], { relativeTo: this.route });\n                  this.toastr.success('Restaurant Created', 'Success!');\n                });\n              });\n            } else {\n              this.router.navigate(['../..'], { relativeTo: this.route });\n              this.toastr.success('Restaurant Created', 'Success!');\n            }\n          });\n      }\n    } else {\n      this.fireDB.validateAllFormFields(outletForm.form);\n      this.toastr.error('Fill up the form correctly!', 'Error!');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2\\\"></div>\\n  <div class=\\\"col-lg-8\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['add', 'new']\\\">\\n            <i class=\\\"fa fa-plus\\\"></i> &nbsp; Add Restaurant</button>\\n        </div>\\n        <br>\\n        <div>\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th>Restaurant Name</th>\\n                <th>Manage</th>\\n                <th>Action</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let outlet of outletList | async\\\">\\n                <td>{{ outlet.name }}</td>\\n                <td>\\n                  <button class=\\\"btn btn-info\\\" type=\\\"button\\\" [routerLink]=\\\"['/outlet/dash', outlet.id, 'menu-builder']\\\">\\n                    Manage\\n                  </button>\\n                </td>\\n                <td class=\\\"actionList\\\">\\n                  <button class=\\\"btn btn-sm btn-info\\\" type=\\\"button\\\" [routerLink]=\\\"['edit', outlet.id]\\\">\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteOutlet($event, outlet.id)\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-2\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { OutletFirePath } from '../../../firestore.path';\nimport { Outlet } from '../outlet.model';\n\n@Component({\n  selector: 'outlets-outlet-list',\n  templateUrl: './outlet-list.component.html',\n  styleUrls: ['./outlet-list.component.css'],\n})\nexport class OutletListComponent implements OnInit {\n  outletList: Observable<Outlet[]>;\n\n  constructor(public toastr: ToastrService, public fireDB: FirestoreService) { }\n\n  ngOnInit() {\n    this.outletList = this.fireDB.colWithIds$(OutletFirePath);\n  }\n\n  deleteOutlet(event: Event, outletID: string) {\n    const response = confirm('are you sure you want to delete?');\n    if (response) {\n      this.fireDB.delete(`${OutletFirePath}/${outletID}`);\n      this.toastr.success('Restaurant Deleted', 'Success!');\n    }\n    return;\n  }\n\n}\n","export interface Outlet {\n  id?: string;\n  name?: string;\n  website?: string;\n  tax?: string;\n  ordertype?: {\n    forhere?: boolean;\n    togo?: boolean;\n  };\n  omnivore?: string;\n  analytics?: string;\n  confirmation?: string;\n  errmag?: string;\n  isDisable?: boolean;\n  image?: string;\n  currency?: string;\n}\n\nexport interface SelectFormVal {\n  [index: number]: {\n    label: string;\n    value: string;\n  };\n}\nexport const orderTypeList: SelectFormVal = [\n  { label: 'For Here', value: 'For Here' },\n  { label: 'To Go', value: 'To Go' },\n];\nexport const currencyList: SelectFormVal = [\n  { label: 'US Doller ($)', value: 'USD' },\n];\n","module.exports = \".btn-fetch{\\n  width: 120px;\\n  margin-right: 10px;\\n}\\n.btn-auto-match{\\n  margin-left: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2\\\"></div>\\n  <div class=\\\"col-lg-8\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-fetch\\\"><i class=\\\"fa fa-arrow-down\\\"></i> Fetch</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-success btn-auto-match\\\"><i class=\\\"fa fa-refresh\\\"></i> Auto Match</button>\\n        </div>\\n        <br>\\n        <div>\\n          <form class=\\\"form-horizontal\\\" id=\\\"posItem\\\" #PosItem=\\\"ngForm\\\" (ngSubmit)=\\\"addPosItem(PosItem)\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr>\\n                  <th>Menu Item</th>\\n                  <th>Dropdown</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let list of menuItemListData;let i = index\\\" [ngModelGroup]=\\\"i\\\">\\n                  <td>{{ list.name }}</td>\\n\\n                  <td class=\\\"actionList\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"prd\\\" [ngModel]=\\\"row?.prd\\\" #prd=\\\"ngModel\\\">\\n                      <option value=\\\"product1\\\">product 1</option>\\n                      <option value=\\\"product2\\\">product 2</option>\\n                    </select>\\n                  </td>\\n                </tr>\\n              </tbody>\\n\\n            </table>\\n\\n            <div class=\\\"text-center\\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\">Submit</button>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-2\\\"></div>\\n</div>\\n\"","import { MenuItem } from './../../builder/menu-item/menu-item.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { POSItemFirePath, MenuItemFirePath } from '../../../firestore.path';\nimport { Positem } from './../positem.model';\n@Component({\n  selector: 'outlet-pos-item',\n  templateUrl: './pos-item.component.html',\n  styleUrls: ['./pos-item.component.css'],\n})\nexport class PosItemComponent implements OnInit {\n  outletID: string | null;\n\n  menuItemListData: MenuItem[];\n  posItemList: Observable<Positem[]>;\n\n  constructor(public fireDB: FirestoreService, private route: ActivatedRoute, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.fireDB.colWithIds$(`outlets/${this.outletID}/${MenuItemFirePath}`).subscribe((menuItemsData: MenuItem[]) => {\n      this.menuItemListData = menuItemsData;\n    });\n    this.posItemList = this.fireDB.colWithIds$(POSItemFirePath);\n  }\n  addPosItem(posItemForm: any) {\n    console.log(posItemForm);\n    if (!posItemForm.invalid) {\n      this.fireDB.add(POSItemFirePath, posItemForm.form.value)\n        .then((documentRef) => {\n          const menuItemID = documentRef.id;\n          this.toastr.success('Updated', 'Success!');\n        });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2\\\"></div>\\n  <div class=\\\"col-lg-8\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n        </div>\\n        <br>\\n        <div>\\n          <form class=\\\"form-horizontal\\\" id=\\\"posModifier\\\" #PosItem=\\\"ngForm\\\" (ngSubmit)=\\\"addPosModifier(posModifier)\\\">\\n            <table class=\\\"table table-bordered\\\">\\n              <thead>\\n                <tr>\\n                  <th>Modifier</th>\\n                  <th>DropDown</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr *ngFor=\\\"let modifier of modifierList;let i = index\\\" [ngModelGroup]=\\\"i\\\">\\n                  <td>{{ modifier.name }}</td>\\n\\n                  <td class=\\\"actionList\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"prd\\\" [ngModel]=\\\"row?.prd\\\" #prd=\\\"ngModel\\\">\\n                      <option value=\\\"product1\\\">product 1</option>\\n                      <option value=\\\"product2\\\">product 2</option>\\n                    </select>\\n                  </td>\\n                </tr>\\n              </tbody>\\n\\n            </table>\\n          </form>\\n\\n          <div class=\\\"text-center\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\">Submit</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-2\\\"></div>\\n</div>\\n\"","import { Posmodifier } from './../posmodifier.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { UserFirePath, MenuItemFirePath, POSModifierFirePath } from '../../../firestore.path';\nimport { MenuItem } from './../../builder/menu-item/menu-item.model';\nimport { ModifierFirePath } from './../../../firestore.path';\nimport { Modifier } from './../../builder/modifier/modifier.model';\n\n@Component({\n  selector: 'outlet-pos-modifier',\n  templateUrl: './pos-modifier.component.html',\n  styleUrls: ['./pos-modifier.component.css'],\n})\nexport class PosModifierComponent implements OnInit {\n  outletID: string | null;\n  modifierList: Modifier[];\n  posModifier: Observable<Posmodifier[]>;\n\n  constructor(public fireDB: FirestoreService, private route: ActivatedRoute, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.fireDB.colWithIds$(`outlets/${this.outletID}/${ModifierFirePath}`).subscribe((modifierData: Modifier[]) => {\n      this.modifierList = modifierData;\n\n    });\n    this.posModifier = this.fireDB.colWithIds$(POSModifierFirePath);\n  }\n  addPosModifier(posModifierForm: any) {\n    console.log(posModifierForm);\n    if (!posModifierForm.invalid) {\n      this.fireDB.add(POSModifierFirePath, posModifierForm.form.value)\n        .then((documentRef) => {\n          const menuItemID = documentRef.id;\n          this.toastr.success('Updated', 'Success!');\n        });\n    }\n  }\n}\n","module.exports = \".category-img-big-icon {\\n    max-width: 125px;\\n    max-height: 125px;\\n  }\\n  \"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"!userID\\\">Add User</h1>\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"userID\\\">Edit User</h1>\\n    <br>\\n    <form class=\\\"form-horizontal\\\" id=\\\"userForm\\\" #UserForm=\\\"ngForm\\\" (ngSubmit)=\\\"addUser(UserForm)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-2\\\"></div>\\n        <div class=\\\"col-sm-8\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>User Name\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"user?.name\\\" #name=\\\"ngModel\\\">\\n                <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"name.errors.required\\\">User Name is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Email\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" [ngModel]=\\\"user?.email\\\"\\n                  #email=\\\"ngModel\\\">\\n                <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"email.errors.required\\\">E-mail is required.</div>\\n                  <div *ngIf=\\\"email.errors.pattern && email?.value != ''\\\">Email should be in proper format.</div>\\n                </div>\\n                <span class=\\\"help-block\\\">\\n                  <small> Email address should be unique and cannot be used anywhere else on the system for other roles / outlets.</small>\\n                </span>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"pass\\\" required minlength=\\\"6\\\" [ngModel]=\\\"user?.pass\\\" #pass=\\\"ngModel\\\">\\n                <div *ngIf=\\\"pass.invalid && (pass.dirty || pass.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"pass.errors.required\\\">Password is required.</div>\\n                  <div *ngIf=\\\"pass.errors.minlength\\\">Must be at least 6 characters long.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Position </label>\\n                <br />\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"outletOwner\\\" required name=\\\"role\\\" [ngModel]=\\\"user?.role\\\" #role=\\\"ngModel\\\"\\n                        value=\\\"Owner\\\">\\n                      <label class=\\\"custom-control-label\\\" for=\\\"outletOwner\\\">Outlet Owner</label>\\n                    </div>\\n                    <span class=\\\"help-block\\\">\\n                      <small> Will have complete access to the outlet from Admin App & Admin Panel.</small>\\n                    </span>\\n                  </div>\\n                  <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"outletManager\\\" required name=\\\"role\\\" [ngModel]=\\\"user?.role\\\" #role=\\\"ngModel\\\"\\n                        value=\\\"Manager\\\">\\n                      <label class=\\\"custom-control-label\\\" for=\\\"outletManager\\\">Outlet Manager</label>\\n                    </div>\\n                    <span class=\\\"help-block\\\">\\n                      <small> Will have access to Admin App only. No Admin Panel Access.</small>\\n                    </span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-2\\\"></div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"userID\\\">Update</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"!userID\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-inverse waves-effect waves-light\\\" [routerLink]=\\\"['../..']\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { UserFirePath } from '../../../firestore.path';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'outlet-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css'],\n})\nexport class UserFormComponent implements OnInit {\n  userID: string | null;\n  outletID: string | null;\n  user: User;\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    public toastr: ToastrService,\n    public fireDB: FirestoreService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.userID = this.route.snapshot.paramMap.get('id');\n    if (this.userID) {\n      this.fireDB.doc$(`outlets/${this.outletID}/${UserFirePath}/${this.userID}`).subscribe((userData: User) => {\n        this.user = userData;\n      });\n    } else {\n      this.user = {};\n    }\n  }\n\n  addUser(userForm: NgForm) {\n    if (!userForm.invalid) {\n      if (this.userID) {\n        this.fireDB.set(`outlets/${this.outletID}/${UserFirePath}/${this.userID}`, userForm.form.value);\n        this.toastr.success('User Updated', 'Success!');\n      } else {\n        this.fireDB.add(`outlets/${this.outletID}/${UserFirePath}`, userForm.form.value);\n        this.toastr.success('User Updated', 'Success!');\n      }\n      this.router.navigate(['../..'], { relativeTo: this.route });\n    } else {\n      this.fireDB.validateAllFormFields(userForm.form);\n      this.toastr.error('Fill up the form correctly!', 'Error!');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2\\\"></div>\\n  <div class=\\\"col-lg-8\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['add/new']\\\">\\n            <i class=\\\"fa fa-plus\\\"></i> &nbsp; Add User</button>\\n        </div>\\n        <br>\\n        <div>\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th>User Name</th>\\n                <th>Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let user of userList | async\\\">\\n                <td>{{ user.name }}</td>\\n                <td class=\\\"actionList\\\">\\n                  <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteUser($event, user.id)\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-2\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { UserFirePath } from '../../../firestore.path';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'outlet-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n})\nexport class UserListComponent implements OnInit {\n  userList: Observable<User[]>;\n  outletID: string | null;\n\n  constructor(public fireDB: FirestoreService, private route: ActivatedRoute, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.outletID = this.route.pathFromRoot[this.route.pathFromRoot.length - 3].snapshot.paramMap.get('outletid');\n    this.userList = this.fireDB.colWithIds$(`outlets/${this.outletID}/${UserFirePath}`);\n  }\n\n  deleteUser(event: Event, userID: string) {\n    const response = confirm('are you sure you want to delete?');\n    if (response) {\n      this.fireDB.delete(`outlets/${this.outletID}/${UserFirePath}/${userID}`);\n      this.toastr.success('User Deleted', 'Success!');\n    }\n    return;\n  }\n\n}\n"],"sourceRoot":""}