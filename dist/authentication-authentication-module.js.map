{"version":3,"sources":["webpack:///./src/app/authentication/404/not-found.component.css","webpack:///./src/app/authentication/404/not-found.component.html","webpack:///./src/app/authentication/404/not-found.component.ts","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/authentication.routing.ts","webpack:///./src/app/authentication/email-verify/email-verify.component.css","webpack:///./src/app/authentication/email-verify/email-verify.component.html","webpack:///./src/app/authentication/email-verify/email-verify.component.ts","webpack:///./src/app/authentication/login/login.component.css","webpack:///./src/app/authentication/login/login.component.html","webpack:///./src/app/authentication/login/login.component.ts","webpack:///./src/app/authentication/signup/signup.component.css","webpack:///./src/app/authentication/signup/signup.component.html","webpack:///./src/app/authentication/signup/signup.component.ts"],"names":[],"mappings":"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","file":"authentication-authentication-module.js","sourcesContent":["module.exports = \"/*.error-box {\\n  height: 100%;\\n  position: fixed;\\n  background: url(../../../assets/images/background/error-bg.jpg) no-repeat center center #fff;\\n  width: 100%; }\\n  .error-box .footer {\\n  width: 100%;\\n  left: 0px;\\n  right: 0px; }\\n\\n.error-body {\\n  padding-top: 5%; }\\n  .error-body h1 {\\n  font-size: 210px;\\n  font-weight: 900;\\n  text-shadow: 4px 4px 0 #ffffff, 6px 6px 0 #263238;\\n  line-height: 210px; }\\n\\n@media(max-width:767px) {\\n  .error-box {\\n    position: relative;\\n    padding-bottom: 60px;\\n  }\\n  .error-body {\\n    padding-top: 10%;\\n  }\\n  .error-body h1 {\\n      font-size: 100px;\\n      font-weight: 600;\\n      line-height: 100px;\\n    }\\n}*/\\n\\n\"","module.exports = \"<div class=\\\"error-box\\\">\\n  <div class=\\\"error-body text-center\\\">\\n    <h1>404</h1>\\n    <h3 class=\\\"text-uppercase\\\">Page Not Found !</h3>\\n    <p class=\\\"text-muted m-t-30 m-b-30\\\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\\n    <a class=\\\"btn btn-info btn-rounded waves-effect waves-light m-b-40\\\" [routerLink]=\\\"['/auth/login']\\\">Back to home</a> </div>\\n  <footer class=\\\"footer text-center\\\">Â© 2018 Admin Panel.</footer>\\n</div>\"","import { AfterViewInit, Component } from '@angular/core';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['not-found.component.css'],\n})\nexport class NotFoundComponent implements AfterViewInit {\n\n  ngAfterViewInit() {\n    $(() => {\n      $('.preloader').fadeOut();\n    });\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './404/not-found.component';\nimport { AuthenticationRoutes } from './authentication.routing';\nimport { EmailVerifyComponent } from './email-verify/email-verify.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthenticationRoutes),\n    FormsModule,\n  ],\n  declarations: [\n    NotFoundComponent,\n    LoginComponent,\n    SignupComponent,\n    EmailVerifyComponent,\n  ],\n})\n\nexport class AuthenticationModule { }\n","import { Routes } from '@angular/router';\nimport { NotFoundComponent } from './404/not-found.component';\nimport { EmailVerifyComponent } from './email-verify/email-verify.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nexport const AuthenticationRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: '404',\n      component: NotFoundComponent,\n    }, {\n      path: 'login',\n      component: LoginComponent,\n    }, {\n      path: 'signup',\n      component: SignupComponent,\n    }, {\n      path: 'email-verify',\n      component: EmailVerifyComponent,\n    }],\n  },\n];\n","module.exports = \"\\n\"","module.exports = \"<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/login-register.jpg);\\\">\\n  <div class=\\\"login-box card\\\">\\n    <div class=\\\"card-body\\\">\\n      <h3 class=\\\"box-title m-b-20\\\">Verify your email</h3>\\n      <p>Verify your email to proceed.</p>\\n      <button class=\\\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\\\" (click)=\\\"sendEmailVerification()\\\">Resend Email Verification</button>\\n      <button class=\\\"btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light\\\" (click)=\\\"refreshEmailVerification()\\\">Refresh</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { AfterViewInit, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as $ from 'jquery';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'app-email-verify',\n  templateUrl: './email-verify.component.html',\n  styleUrls: ['./email-verify.component.css'],\n})\nexport class EmailVerifyComponent implements AfterViewInit {\n\n  constructor(public auth: AuthService,\n    private router: Router,\n    public toastr: ToastrService) { }\n\n  ngAfterViewInit() {\n    $(() => {\n      $('.preloader').fadeOut();\n    });\n    this.auth.user.subscribe((userData) => {\n      if (!userData) {\n        this.router.navigate(['/auth/login']);\n      } else {\n        this.refreshEmailVerification();\n      }\n    });\n  }\n\n  sendEmailVerification() {\n    this.refreshEmailVerification();\n    const emailVerifyProm = this.auth.sendEmailVerification();\n    if (emailVerifyProm) {\n      emailVerifyProm\n        .then(() => this.afterSignIn())\n        .catch((error: any) => this.toastr.error(error.message, 'Error!'));\n    } else {\n      this.afterSignIn();\n    }\n  }\n\n  async refreshEmailVerification() {\n    const userVerified = await this.auth.isUserEmailVerified();\n    if (userVerified) {\n      this.afterSignIn();\n    }\n  }\n\n  afterSignIn() {\n    this.router.navigate(['/dashboard/main']);\n  }\n\n}\n","module.exports = \"\\n\"","module.exports = \"<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/login-register.jpg);\\\">\\n  <div class=\\\"login-box card\\\">\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form-horizontal form-material\\\" id=\\\"loginform\\\" #LoginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(LoginForm)\\\">\\n        <h3 class=\\\"box-title m-b-20\\\">Sign In</h3>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" placeholder=\\\"Email\\\" ngModel #userEmail=\\\"ngModel\\\">\\n          <div *ngIf=\\\"userEmail.invalid && (userEmail.dirty || userEmail.touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"userEmail.errors.required\\\">Email is required.</div>\\n            <div *ngIf=\\\"userEmail.errors.pattern && userEmail?.value != ''\\\">Email should be in proper format.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" minlength=\\\"6\\\" required placeholder=\\\"Password\\\"  ngModel #userPass=\\\"ngModel\\\">\\n          <div *ngIf=\\\"userPass.invalid && (userPass.dirty || userPass.touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"userPass.errors.required\\\">Password is required.</div>\\n            <div *ngIf=\\\"userPass.errors.minlength\\\">Must be at least 6 characters long.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-12 font-14\\\">\\n          <div class=\\\"checkbox checkbox-primary pull-left p-t-0\\\">\\n            <input id=\\\"checkbox-signup\\\" type=\\\"checkbox\\\">\\n            <label for=\\\"checkbox-signup\\\">Remember me</label>\\n          </div> <a href=\\\"javascript:void(0)\\\" id=\\\"to-recover\\\" class=\\\"text-dark pull-right\\\">Forgot pwd?</a> </div>\\n        </div>\\n        <div class=\\\"form-group text-center m-t-20\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light\\\" [disabled]=\\\"LoginForm.invalid\\\">Log In</button>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\\\">\\n            <div class=\\\"social\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-facebook\\\" title=\\\"Login with Facebook\\\" (click)=\\\"signInWithFacebook()\\\"> <i aria-hidden=\\\"true\\\" class=\\\"mdi mdi-facebook\\\"></i></button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-googleplus\\\" title=\\\"Login with Google\\\" (click)=\\\"signInWithGoogle()\\\"> <i aria-hidden=\\\"true\\\" class=\\\"mdi mdi-google\\\"></i></button>\\n            </div>\\n          </div>\\n        </div> -->\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n          <div>Don't have an account? <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/signup']\\\"><b>Sign Up</b></a></div>\\n          </div>\\n        </div>\\n      </form>\\n      <form class=\\\"form-horizontal\\\" id=\\\"recoverform\\\" #ResetPassForm=\\\"ngForm\\\" (ngSubmit)=\\\"resetPassword(ResetPassForm)\\\">\\n        <div class=\\\"form-group \\\">\\n          <div class=\\\"col-xs-12\\\">\\n          <h3>Recover Password</h3>\\n          <p class=\\\"text-muted\\\">Enter your Email and instructions will be sent to you! </p>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"passEmail\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" placeholder=\\\"Email\\\" ngModel #passEmail=\\\"ngModel\\\">\\n          <div *ngIf=\\\"passEmail.invalid && (passEmail.dirty || passEmail.touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"passEmail.errors.required\\\">Email is required.</div>\\n            <div *ngIf=\\\"passEmail.errors.pattern && passEmail?.value != ''\\\">Email should be in proper format.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center m-t-20\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\\\" [disabled]=\\\"ResetPassForm.invalid\\\">Reset Password</button>\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-danger btn-block text-uppercase waves-effect waves-light\\\" id=\\\"to-recover-close\\\">Close</a>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { AfterViewInit, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as $ from 'jquery';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements AfterViewInit {\n\n  constructor(public auth: AuthService,\n    private router: Router,\n    public toastr: ToastrService) {\n    this.auth.user.subscribe((userData) => {\n      if (userData && !userData.brandSetup) {\n        this.router.navigate(['/brand/brands/setting']);\n      } else if (userData) {\n        this.router.navigate(['/dashboard/main']);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    $(() => {\n      $('.preloader').fadeOut();\n    });\n    $('#to-recover').on('click', () => {\n      $('#loginform').slideUp();\n      $('#recoverform').fadeIn();\n    });\n    $('#to-recover-close').on('click', () => {\n      $('#recoverform').fadeOut();\n      $('#loginform').slideDown();\n    });\n  }\n\n  login(loginForm: any) {\n    this.auth.emailLogin(loginForm.form.value['email'], loginForm.form.value['password'])\n      .then(() => this.afterSignIn())\n      .catch((error) => this.toastr.error(error.message, 'Error!'));\n  }\n\n  resetPassword(passwordForm: any) {\n    this.auth.resetPassword(passwordForm.form.value['passEmail'])\n      .then(() => {\n        $('#to-recover-close').click();\n      })\n      .catch((error: any) => this.toastr.error(error.message, 'Error!'));\n  }\n\n  private afterSignIn() {\n    this.toastr.success('You are loggedin successfully.', 'Success!');\n    this.router.navigate(['/dashboard/main']);\n  }\n\n}\n","module.exports = \"\\n\"","module.exports = \"<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/login-register.jpg);\\\">\\n  <div class=\\\"login-box card\\\">\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form-horizontal form-material\\\" id=\\\"signupform\\\" #SignupForm=\\\"ngForm\\\" (ngSubmit)=\\\"signup(SignupForm)\\\">\\n        <h3 class=\\\"box-title m-b-20\\\">Sign Up</h3>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" placeholder=\\\"Email\\\" ngModel #userEmail=\\\"ngModel\\\">\\n          <div *ngIf=\\\"userEmail.invalid && (userEmail.dirty || userEmail.touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"userEmail.errors.required\\\">Email is required.</div>\\n            <div *ngIf=\\\"userEmail.errors.pattern && userEmail?.value != ''\\\">Email should be in proper format.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" minlength=\\\"6\\\" required placeholder=\\\"Password\\\" ngModel #userPass=\\\"ngModel\\\">\\n          <div *ngIf=\\\"userPass.invalid && (userPass.dirty || userPass.touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"userPass.errors.required\\\">Password is required.</div>\\n            <div *ngIf=\\\"userPass.errors.minlength\\\">Must be at least 6 characters long.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"confirmpassword\\\" minlength=\\\"6\\\" required placeholder=\\\"Confirm Password\\\" ngModel #confirmPass=\\\"ngModel\\\">\\n          <div *ngIf=\\\"(!confirmPass.invalid && (confirmPass.value != userPass.value)) && (confirmPass.dirty || confirmPass.touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div>Password does not match.</div>\\n          </div>\\n          <div *ngIf=\\\"confirmPass.invalid && (confirmPass.dirty || confirmPass.touched)\\\" class=\\\"alert alert-danger\\\">\\n            <div *ngIf=\\\"confirmPass.errors.required\\\">Password is required.</div>\\n            <div *ngIf=\\\"confirmPass.errors.minlength\\\">Must be at least 6 characters long.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"checkbox checkbox-success p-t-0\\\">\\n              <input id=\\\"checkbox-signup\\\" type=\\\"checkbox\\\" required=\\\"\\\" class=\\\"filled-in chk-col-light-blue\\\">\\n              <label for=\\\"checkbox-signup\\\"> I agree to all <a href=\\\"javascript:void(0)\\\">Terms</a></label>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center m-t-20\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light\\\" [disabled]=\\\"SignupForm.invalid || (confirmPass.value != userPass.value)\\\">Sign Up</button>\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\\\">\\n            <div class=\\\"social\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-facebook\\\" title=\\\"Login with Facebook\\\" (click)=\\\"signInWithFacebook()\\\"> <i aria-hidden=\\\"true\\\" class=\\\"mdi mdi-facebook\\\"></i></button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-googleplus\\\" title=\\\"Login with Google\\\" (click)=\\\"signInWithGoogle()\\\"> <i aria-hidden=\\\"true\\\" class=\\\"mdi mdi-google\\\"></i></button>\\n            </div>\\n          </div>\\n        </div> -->\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n          Already have an account? <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/login']\\\"><b>Sign In</b></a>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent {\n\n  constructor(public auth: AuthService,\n    private router: Router,\n    public toastr: ToastrService) {\n    this.auth.user.subscribe((userData) => {\n      if (userData && userData.uid) {\n        this.router.navigate(['/dashboard/main']);\n      }\n    });\n  }\n\n  signup(signupForm: any) {\n    this.auth.emailSignUp(signupForm.form.value['email'], signupForm.form.value['password'])\n      .then(() => this.afterSignIn())\n      .catch((error) => this.toastr.error(error.message, 'Error!'));\n  }\n\n  private afterSignIn() {\n    this.auth.sendEmailVerification();\n    this.toastr.success('You are loggedin successfully.', 'Success!');\n    this.router.navigate(['/dashboard/main']);\n  }\n}\n"],"sourceRoot":""}