{"version":3,"sources":["webpack:///./src/app/modules/brand/ad-banner/ad-banner-form/ad-banner-form.component.css","webpack:///./src/app/modules/brand/ad-banner/ad-banner-form/ad-banner-form.component.html","webpack:///./src/app/modules/brand/ad-banner/ad-banner-form/ad-banner-form.component.ts","webpack:///./src/app/modules/brand/ad-banner/ad-banner-list/ad-banner-list.component.css","webpack:///./src/app/modules/brand/ad-banner/ad-banner-list/ad-banner-list.component.html","webpack:///./src/app/modules/brand/ad-banner/ad-banner-list/ad-banner-list.component.ts","webpack:///./src/app/modules/brand/brand.module.ts","webpack:///./src/app/modules/brand/brand.routing.ts","webpack:///./src/app/modules/brand/brands/brand-form/brand-form.component.css","webpack:///./src/app/modules/brand/brands/brand-form/brand-form.component.html","webpack:///./src/app/modules/brand/brands/brand-form/brand-form.component.ts","webpack:///./src/app/modules/brand/reports/reports-list/reports-list.component.css","webpack:///./src/app/modules/brand/reports/reports-list/reports-list.component.html","webpack:///./src/app/modules/brand/reports/reports-list/reports-list.component.ts","webpack:///./src/app/modules/brand/reports/reports.model.ts","webpack:///./src/app/modules/brand/users/users-list/users-list.component.css","webpack:///./src/app/modules/brand/users/users-list/users-list.component.html","webpack:///./src/app/modules/brand/users/users-list/users-list.component.ts"],"names":[],"mappings":"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","file":"modules-brand-brand-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"!adBannerID\\\">Add Ad Banner</h1>\\n    <h1 class=\\\"text-center title\\\" *ngIf=\\\"adBannerID\\\">Edit Ad Banner</h1>\\n    <form class=\\\"form-horizontal\\\" id=\\\"adBannerForm\\\" #AdBanner=\\\"ngForm\\\" (ngSubmit)=\\\"addAdBannerForm(AdBanner)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"form-group\\\">\\n\\n\\n                <input type=\\\"file\\\" (change)=\\\"uploadFile($event, 'image')\\\" accept=\\\".png,.jpg\\\" />\\n                <input type=\\\"hidden\\\" name=\\\"image\\\" [ngModel]=\\\"adBanner?.image\\\">\\n                <br>\\n                <br>\\n                <span class=\\\"help-block\\\">\\n                  <small> Maximum File Size : 5mb. Supported file formats : .png & .jpg </small>\\n                </span>\\n                <div *ngIf=\\\"adBanner?.image\\\">\\n                  <img [src]=\\\"adBanner?.image\\\" class=\\\"adBanner-img-big-icon\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteFile('image')\\\">Delete</button>\\n                </div>\\n\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Title\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"title\\\" required [ngModel]=\\\"adBanner?.title\\\" #title=\\\"ngModel\\\">\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"title.errors.required\\\">Title is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>URL</label>\\n                <input class=\\\"form-control\\\" pattern=\\\"^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/.*)?$\\\"\\n                  type=\\\"text\\\" name=\\\"url\\\" [ngModel]=\\\"adBanner?.url\\\" #url=\\\"ngModel\\\">\\n                <div *ngIf=\\\"url.errors && (url.dirty || url.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div [hidden]=\\\"!url.errors.pattern\\\">\\n                    Enter a valid URL!\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Sort Weight\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"sort\\\" [ngModel]=\\\"adBanner?.sort\\\" #sort=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\">\\n                  <small> Enter higher value to list this item at the top of the category. (Ex. 100) </small>\\n                </span>\\n              </div>\\n\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"adBannerID\\\">Update</button>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\" *ngIf=\\\"!adBannerID\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-lg btn-inverse waves-effect waves-light\\\" [routerLink]=\\\"['/brand/ad-banner/list']\\\">Cancel</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { AdBannerFirePath } from '../../../firestore.path';\nimport { AdBanner } from '../ad-banner.model';\n\n@Component({\n  selector: 'brand-ad-banner-form',\n  templateUrl: './ad-banner-form.component.html',\n  styleUrls: ['./ad-banner-form.component.css'],\n})\nexport class AdBannerFormComponent implements OnInit {\n  adBannerID: string | null;\n  adBanner: AdBanner;\n  bigIconFile: File | null;\n\n  constructor(public fireDB: FirestoreService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.adBannerID = this.route.snapshot.paramMap.get('id');\n    if (this.adBannerID) {\n      this.fireDB.doc$(`${AdBannerFirePath}/${this.adBannerID}`).subscribe((adBannerData: AdBanner) => {\n        this.adBanner = adBannerData;\n      });\n    } else {\n      this.adBanner = {};\n    }\n  }\n\n  uploadFile(event: any, type: string) {\n    if (event && type) {\n      if (type === 'image') {\n        if (this.adBannerID) {\n          this.toastr.info('File uploading..', 'Wait!');\n          const uploadTask = this.fireDB.uploadFileToStorage(`brand/adBanner/${this.adBannerID}/original.jpg`, event.target.files[0]);\n          uploadTask.then().then((snapshot) => {\n            snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n              if (this.adBanner) {\n                this.adBanner.image = imageUrl;\n              }\n              this.toastr.success('File uploaded', 'Success!');\n            });\n          });\n        } else {\n          this.bigIconFile = event.target.files[0];\n        }\n      }\n    }\n  }\n\n  deleteFile(type: string) {\n    if (type === 'image') {\n      if (this.adBannerID) {\n        this.fireDB.deleteFileStorage(`brand/adBanner/${this.adBannerID}/original.jpg`);\n        if (this.adBanner && this.adBanner.image) {\n          this.adBanner.image = '';\n        }\n      } else {\n        this.bigIconFile = null;\n      }\n    }\n  }\n\n  addAdBannerForm(adBannerForm: any) {\n    if (!adBannerForm.invalid) {\n      if (this.adBannerID) {\n        this.fireDB.set(`${AdBannerFirePath}/${this.adBannerID}`, adBannerForm.form.value);\n        this.toastr.success('Ad Banner Updated', 'Success!');\n      } else {\n        this.fireDB.add(AdBannerFirePath, adBannerForm.form.value)\n          .then((documentRef) => {\n            const adBannerID = documentRef.id;\n            if (this.bigIconFile) {\n              const uploadTask = this.fireDB.uploadFileToStorage(`brand/adBanner/${adBannerID}/original.jpg`, this.bigIconFile);\n              this.toastr.info('File uploading..', 'Wait!');\n              uploadTask.then().then((snapshot) => {\n                snapshot.ref.getDownloadURL().then((imageUrl: string) => {\n                  documentRef.update({\n                    image: imageUrl,\n                  });\n                });\n              });\n            }\n          });\n        this.toastr.success('Ad Banner Created', 'Success!');\n      }\n      this.router.navigate(['/brand/ad-banner/list']);\n    } else {\n      this.fireDB.validateAllFormFields(adBannerForm.form);\n      this.toastr.error('Fill up the form correctly!', 'Error!');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2\\\"></div>\\n  <div class=\\\"col-lg-8\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-success\\\" type=\\\"button\\\" [routerLink]=\\\"['/brand/ad-banner/add/new']\\\">\\n            <i class=\\\"fa fa-plus\\\"></i> &nbsp; Ad Banner</button>\\n        </div>\\n        <br>\\n        <div>\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th>Ad Banner Title</th>\\n                <th>Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let adBanner of adBannerList | async\\\">\\n                <td>{{ adBanner.title }}</td>\\n                <td class=\\\"actionList\\\">\\n                  <button class=\\\"btn btn-sm btn-info\\\" type=\\\"button\\\" [routerLink]=\\\"['/brand/ad-banner', 'edit', adBanner.id]\\\">\\n                    <i class=\\\"fa fa-pencil\\\"></i>\\n                  </button>\\n                  <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteAdBanner($event, adBanner.id)\\\">\\n                    <i class=\\\"fa fa-trash\\\"></i>\\n                  </button>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-2\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { AdBannerFirePath } from '../../../firestore.path';\nimport { AdBanner } from '../ad-banner.model';\n\n@Component({\n  selector: 'brand-ad-banner-list',\n  templateUrl: './ad-banner-list.component.html',\n  styleUrls: ['./ad-banner-list.component.css'],\n})\nexport class AdBannerListComponent implements OnInit {\n  adBannerList: Observable<AdBanner[]>;\n\n  constructor(public fireDB: FirestoreService, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.adBannerList = this.fireDB.colWithIds$(AdBannerFirePath);\n  }\n\n  deleteAdBanner(event: Event, adBannerID: string) {\n    const response = confirm('are you sure you want to delete?');\n    if (response) {\n      this.fireDB.delete(`${AdBannerFirePath}/${adBannerID}`);\n      this.toastr.success('Ad Banner Deleted', 'Success!');\n    }\n    return;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { QuillModule } from 'ngx-quill';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from '../../core/shared.module';\nimport { BrandRoutes } from './brand.routing';\nimport { BrandFormComponent } from './brands/brand-form/brand-form.component';\nimport { AdBannerFormComponent } from './ad-banner/ad-banner-form/ad-banner-form.component';\nimport { AdBannerListComponent } from './ad-banner/ad-banner-list/ad-banner-list.component';\nimport { ReportsListComponent } from './reports/reports-list/reports-list.component';\nimport { UsersListComponent } from './users/users-list/users-list.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    QuillModule,\n    CommonModule,\n    SharedModule,\n    NgSelectModule,\n    NgbModule,\n    RouterModule.forChild(BrandRoutes),\n  ],\n  declarations: [\n    BrandFormComponent,\n    AdBannerFormComponent,\n    AdBannerListComponent,\n    ReportsListComponent,\n    UsersListComponent,\n  ],\n  providers: [],\n})\nexport class BrandModule { }\n","import { Routes } from '@angular/router';\nimport { BrandFormComponent } from './brands/brand-form/brand-form.component';\nimport { AdBannerFormComponent } from './ad-banner/ad-banner-form/ad-banner-form.component';\nimport { AdBannerListComponent } from './ad-banner/ad-banner-list/ad-banner-list.component';\nimport { ReportsListComponent } from './reports/reports-list/reports-list.component';\nimport { UsersListComponent } from './users/users-list/users-list.component';\n\nexport const BrandRoutes: Routes = [\n  {\n    path: 'brands',\n    children: [\n      {\n        path: 'setting',\n        component: BrandFormComponent,\n      }],\n  },\n  {\n    path: 'ad-banner',\n\n    children: [\n      {\n        path: 'list',\n        component: AdBannerListComponent,\n      },\n      {\n        path: 'add/new',\n        component: AdBannerFormComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: AdBannerFormComponent,\n      }],\n  },\n  {\n    path: 'users',\n\n    children: [\n      {\n        path: 'list',\n        component: UsersListComponent,\n      }],\n  },\n  {\n    path: 'reports',\n\n    children: [\n      {\n        path: 'list',\n        component: ReportsListComponent,\n      }],\n  },\n];\n","module.exports = \".brand-img-big-icon {\\n    max-width: 125px;\\n    max-height: 125px;\\n  }\\n  \"","module.exports = \"<div class=\\\"row page-titles text-center\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1 class=\\\"text-dark m-b-0\\\">Brand</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <form class=\\\"form-horizontal\\\" id=\\\"brandForm\\\" #BrandForm=\\\"ngForm\\\" (ngSubmit)=\\\"addBrand(BrandForm)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\"></div>\\n        <div class=\\\"col-sm-6\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Brand Name\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" required [ngModel]=\\\"brand?.name\\\" #name=\\\"ngModel\\\">\\n                <span class=\\\"help-block\\\">\\n                  <small>Example : UberEats</small>\\n                </span>\\n                <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"name.errors.required\\\">Brand Name is required.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Email\\n                  <span>*</span>\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"email\\\" name=\\\"email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" [ngModel]=\\\"brand?.email\\\"\\n                  #email=\\\"ngModel\\\">\\n                <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"email.errors.required\\\">E-mail is required.</div>\\n                  <div *ngIf=\\\"email.errors.pattern && email.value != ''\\\">Email should be in proper format.</div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Website</label>\\n                <input class=\\\"form-control\\\" pattern=\\\"^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/.*)?$\\\"\\n                  type=\\\"text\\\" name=\\\"website\\\" [ngModel]=\\\"brand?.website\\\" #website=\\\"ngModel\\\">\\n                <div *ngIf=\\\"website.errors && (website.dirty || website.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div [hidden]=\\\"!website.errors.pattern\\\">\\n                    Enter a valid URL!\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Address\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"address\\\" [ngModel]=\\\"brand?.address\\\" #address=\\\"ngModel\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Country\\n                </label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"country\\\" [ngModel]=\\\"brand?.country\\\" #country=\\\"ngModel\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"text-center\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-success waves-effect waves-light m-r-10\\\">Submit</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService, User } from '../../../../core/auth.service';\r\nimport { FirestoreService } from '../../../../core/firestore.service';\r\nimport { BrandFirePath } from '../../../firestore.path';\r\nimport { Brand } from '../brand.model';\r\n\r\n@Component({\r\n  selector: 'brand-brand-form',\r\n  templateUrl: './brand-form.component.html',\r\n  styleUrls: ['./brand-form.component.css'],\r\n})\r\nexport class BrandFormComponent implements OnInit {\r\n  brand: Brand;\r\n  bigIconFile: File;\r\n  user: User | null;\r\n  constructor(public fireDB: FirestoreService,\r\n    private afs: AngularFirestore,\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    public toastr: ToastrService) {\r\n    this.user = this.auth.userDetail;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fireDB.doc$(`${BrandFirePath}`).subscribe((brandData: Brand) => {\r\n      this.brand = brandData || {};\r\n    });\r\n  }\r\n\r\n  compareByOptionCode(firstOption: any, secondOption: any) {\r\n    return firstOption && secondOption && firstOption.name === secondOption.name;\r\n  }\r\n\r\n  addBrand(brandForm: any) {\r\n    if (!brandForm.invalid) {\r\n      this.fireDB.set(BrandFirePath, brandForm.form.value);\r\n      this.toastr.success('Brand Updated', 'Success!');\r\n      if (this.user && !this.user.brandSetup) {\r\n        this.afs.doc(`admin/${this.user.uid}`).update({\r\n          brandSetup: true,\r\n        });\r\n        this.router.navigate(['/brand/global-setting/setting']);\r\n      }\r\n    } else {\r\n      this.fireDB.validateAllFormFields(brandForm.form);\r\n      this.toastr.error('Fill up the form correctly!', 'Error!');\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"@media (min-width: 992px) {\\n  .modal-dialog {\\n    max-width: 50%;\\n  }\\n}\\n\"","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Order ID: {{reports.order_id}}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title text-center\\\">Items</h4>\\r\\n        <hr>\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Name</th>\\r\\n              <th>Quantity</th>\\r\\n              <th>Price</th>\\r\\n\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let cartItem of reports?.carts\\\">\\r\\n              <th>{{cartItem?.name}}</th>\\r\\n              <th>{{cartItem?.quantity}}</th>\\r\\n              <th>{{cartItem?.price}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th></th>\\r\\n              <th>Total</th>\\r\\n              <th>{{reports.total?.amount}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th></th>\\r\\n              <th>Discount Amount</th>\\r\\n              <th>{{reports.total?.discount_amount}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th></th>\\r\\n              <th>Final Amount</th>\\r\\n              <th>{{reports.total?.final_amount}}</th>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h4 class=\\\"card-title text-center\\\">Delivery Address</h4>\\r\\n        <hr>\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Order Type :</th>\\r\\n              <th>{{reports.order_type}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Payment :</th>\\r\\n              <th>{{reports.payment}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Address Name :</th>\\r\\n              <th>{{reports.address?.name}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Locality :</th>\\r\\n              <th>{{reports.address?.locality}}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th>Phone :</th>\\r\\n              <th>+{{reports.uid}}</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Close click')\\\">Close</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<div class=\\\"row\\\">\\r\\n  <!-- <div class=\\\"col-lg-2\\\"></div> -->\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <h1 class=\\\"text-center\\\">Reports</h1>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <br>\\r\\n        <div>\\r\\n          <table class=\\\"table table-bordered\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Customer Name</th>\\r\\n                <th>Outlet</th>\\r\\n                <th>Payment</th>\\r\\n                <th>Type</th>\\r\\n                <th>Status</th>\\r\\n                <th>Order Time</th>\\r\\n                <th>Grand Total</th>\\r\\n                <th>Mobile No</th>\\r\\n                <th>Actions</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let reports of reportsList | async\\\">\\r\\n                <td>{{ reports.other.cusName }}</td>\\r\\n                <td>{{ getOutlet(reports.outletId) }}</td>\\r\\n                <td>{{ reports.payment }}</td>\\r\\n                <td>{{ reports.order_type }}</td>\\r\\n                <td>{{ reports.status }}</td>\\r\\n                <td>{{ reports.timeslot.seconds * 1000 | date }} - {{ reports.timeslot.seconds * 1000 | date:'shortTime' }}</td>\\r\\n                <td>{{ reports.total.final_amount }}</td>\\r\\n                <td>+{{ reports.uid }}</td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <button class=\\\"btn btn-primary\\\" (click)=\\\"viewDetails(content, reports)\\\">View Details</button>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { toArray } from 'lodash';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FirestoreService } from '../../../../core/firestore.service';\r\nimport { ReportsFirePath, OutletFirePath } from '../../../firestore.path';\r\nimport { Reports, defaultReports } from '../reports.model';\r\nimport { Outlet } from '../../../outlet/outlets/outlet.model';\r\n@Component({\r\n  selector: 'brand-reports-list',\r\n  templateUrl: './reports-list.component.html',\r\n  styleUrls: ['./reports-list.component.css'],\r\n})\r\nexport class ReportsListComponent implements OnInit {\r\n  reportsList: Observable<Reports[]>;\r\n  reports: Reports;\r\n  outletName: Outlet;\r\n  constructor(public fireDB: FirestoreService, public toastr: ToastrService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.reportsList = this.fireDB.colWithIds$(ReportsFirePath);\r\n    this.reports = defaultReports;\r\n  }\r\n  viewDetails(content: any, reports: Reports) {\r\n    this.reports = reports;\r\n    if (reports.carts) {\r\n      this.reports.carts = toArray(reports.carts);\r\n    }\r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n  getOutlet(outletID: any) {\r\n    this.fireDB.doc$(`${OutletFirePath}/${outletID}`).subscribe((outletData: Outlet) => {\r\n      this.outletName = outletData;\r\n    });\r\n    if (this.outletName) {\r\n      return this.outletName.name;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n}\r\n","export interface Reports {\n  address?: {\n    coords?: {\n      lat: number;\n      lon: number;\n    };\n    locality: string;\n    name: string;\n    text: string;\n  };\n  carts?: any;\n  created_at?: string;\n  driver?: {\n    condition?: {\n      isAllOutlet: boolean;\n      outlets: string;\n      driverID: string;\n      email: string;\n      id: string;\n      name: string;\n    };\n  };\n  order_id?: number;\n  order_type?: string;\n  other?: {\n    cusEmail: string;\n    cusName: string;\n  };\n  outletId?: string;\n  payment?: string;\n  status?: string;\n  timeslot?: string;\n  total?: {\n    amount: number;\n    discount_amount: number;\n    final_amount: number;\n  };\n  uid?: string;\n}\n\nexport const defaultReports = {\n  address: {\n    coords: {\n      lat: 0,\n      lon: 0,\n    },\n    locality: '',\n    name: '',\n    text: '',\n  },\n  created_at: '',\n  driver: {\n    condition: {\n      isAllOutlet: false,\n      outlets: '',\n      driverID: '',\n      email: '',\n      id: '',\n      name: '',\n    },\n  },\n  order_id: 0,\n  order_type: '',\n  other: {\n    cusEmail: '',\n    cusName: '',\n  },\n  outletId: '',\n  payment: '',\n  status: '',\n  timeslot: '',\n  total: {\n    amount: 0,\n    discount_amount: 0,\n    final_amount: 0,\n  },\n  uid: '',\n};\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-2\\\"></div>\\n  <div class=\\\"col-lg-8\\\">\\n    <h1 class=\\\"text-center\\\">Users</h1>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <br>\\n        <div>\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th>User Name</th>\\n                <th>Email</th>\\n                <th>Mobile Number</th>\\n                <th>Created At</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let users of usersList | async\\\">\\n                <td>{{ users.name }}</td>\\n                <td>{{ users.email }}</td>\\n                <td>{{ users.uid }}</td>\\n                <td>{{ users.created_at | date }} - {{ users.created_at | date:'shortTime' }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-lg-2\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { FirestoreService } from '../../../../core/firestore.service';\nimport { UsersFirePath } from '../../../firestore.path';\nimport { Users } from '../users.model';\n\n@Component({\n  selector: 'brand-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css'],\n})\nexport class UsersListComponent implements OnInit {\n  usersList: Observable<Users[]>;\n\n  constructor(public fireDB: FirestoreService, public toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.usersList = this.fireDB.colWithIds$(UsersFirePath);\n  }\n\n}\n"],"sourceRoot":""}